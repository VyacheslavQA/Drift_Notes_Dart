// Путь: lib/utils/date_formatter.dart

import 'package:intl/intl.dart';

class DateFormatter {
  static final _fullDateFormat = DateFormat('dd MMMM yyyy', 'ru');
  static final _dayFormat = DateFormat('dd', 'ru');
  static final _monthYearFormat = DateFormat('MMMM yyyy', 'ru');
  static final _shortDateFormat = DateFormat('dd.MM.yyyy', 'ru');

  // Форматирует дату в формате "31 декабря 2023"
  static String formatDate(DateTime date) {
    return _fullDateFormat.format(date);
  }

  // Форматирует дату в формате "31.12.2023"
  static String formatShortDate(DateTime date) {
    return _shortDateFormat.format(date);
  }

  // Форматирует диапазон дат
  static String formatDateRange(DateTime startDate, DateTime endDate) {
    // Если год и месяц одинаковые
    if (startDate.year == endDate.year && startDate.month == endDate.month) {
      return '${_dayFormat.format(startDate)}–${_dayFormat.format(endDate)} ${_monthYearFormat.format(endDate)}';
    }

    // Если год одинаковый, но месяцы разные
    if (startDate.year == endDate.year) {
      final startDateShort = DateFormat('dd MMMM', 'ru').format(startDate);
      final endDateShort = DateFormat('dd MMMM', 'ru').format(endDate);
      final year = DateFormat('yyyy', 'ru').format(endDate);
      return '$startDateShort – $endDateShort $year';
    }

    // Если годы разные
    return '${_fullDateFormat.format(startDate)} – ${_fullDateFormat.format(endDate)}';
  }

  // Возвращает правильную форму слова "день" в зависимости от количества
    static String getDaysText(int days) {
      if (days % 10 == 1 && days % 100 != 11) {
        return 'день';
      } else if ((days % 10 >= 2 && days % 10 <= 4) &&
                 (days % 100 < 10 || days % 100 >= 20)) {
        return 'дня';
      } else {
        return 'дней';
      }
    }

    // Возвращает правильную форму слова "рыба" в зависимости от количества
    static String getFishText(int count) {
      if (count % 10 == 1 && count % 100 != 11) {
        return 'рыба';
      } else if ((count % 10 >= 2 && count % 10 <= 4) &&
                 (count % 100 < 10 || count % 100 >= 20)) {
        return 'рыбы';
      } else {
        return 'рыб';
      }
    }

    // Возвращает правильную форму слова "рыбалка" в зависимости от количества
    static String getFishingTripsText(int count) {
      if (count % 10 == 1 && count % 100 != 11) {
        return 'рыбалка';
      } else if ((count % 10 >= 2 && count % 10 <= 4) &&
                 (count % 100 < 10 || count % 100 >= 20)) {
        return 'рыбалки';
      } else {
        return 'рыбалок';
      }
    }

    // Получает месяц в именительном падеже
    static String getMonthInNominative(int monthIndex) {
      const monthsInNominative = {
        1: 'Январь',
        2: 'Февраль',
        3: 'Март',
        4: 'Апрель',
        5: 'Май',
        6: 'Июнь',
        7: 'Июль',
        8: 'Август',
        9: 'Сентябрь',
        10: 'Октябрь',
        11: 'Ноябрь',
        12: 'Декабрь',
      };

      return monthsInNominative[monthIndex] ?? 'Неизвестный месяц';
    }
  }
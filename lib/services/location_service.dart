// –ü—É—Ç—å: lib/services/location_service.dart

import 'package:shared_preferences/shared_preferences.dart';
import 'package:flutter/material.dart';
import 'package:geolocator/geolocator.dart';
import 'package:permission_handler/permission_handler.dart';

class LocationService {
  static final LocationService _instance = LocationService._internal();
  factory LocationService() => _instance;
  LocationService._internal();

  // –ö–ª—é—á–∏ –¥–ª—è SharedPreferences
  static const String _locationPermissionRequestedKey = 'location_permission_requested';
  static const String _locationPermissionGrantedKey = 'location_permission_granted';
  static const String _lastKnownLatitudeKey = 'last_known_latitude';
  static const String _lastKnownLongitudeKey = 'last_known_longitude';
  static const String _lastLocationUpdateKey = 'last_location_update';

  // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  bool _permissionRequested = false;
  bool _permissionGranted = false;
  Position? _lastKnownPosition;
  String _currentLocale = 'ru';

  // –ì–µ—Ç—Ç–µ—Ä—ã
  bool get isPermissionRequested => _permissionRequested;
  bool get isPermissionGranted => _permissionGranted;
  Position? get lastKnownPosition => _lastKnownPosition;
  bool get hasLocation => _lastKnownPosition != null;

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª–∏ –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  void setLocale(String locale) {
    _currentLocale = locale;
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è - –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  Future<void> initialize() async {
    await _loadSettings();
    debugPrint('üåç LocationService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ SharedPreferences
  Future<void> _loadSettings() async {
    try {
      final prefs = await SharedPreferences.getInstance();

      _permissionRequested = prefs.getBool(_locationPermissionRequestedKey) ?? false;
      _permissionGranted = prefs.getBool(_locationPermissionGrantedKey) ?? false;

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
      final latitude = prefs.getDouble(_lastKnownLatitudeKey);
      final longitude = prefs.getDouble(_lastKnownLongitudeKey);
      final timestamp = prefs.getInt(_lastLocationUpdateKey);

      if (latitude != null && longitude != null && timestamp != null) {
        _lastKnownPosition = Position(
          latitude: latitude,
          longitude: longitude,
          timestamp: DateTime.fromMillisecondsSinceEpoch(timestamp),
          accuracy: 0,
          altitude: 0,
          altitudeAccuracy: 0,
          heading: 0,
          headingAccuracy: 0,
          speed: 0,
          speedAccuracy: 0,
        );
      }

      debugPrint(
        'üåç –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã: requested:$_permissionRequested, granted:$_permissionGranted, hasLocation:$hasLocation',
      );
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: $e');
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  Future<void> _saveSettings() async {
    try {
      final prefs = await SharedPreferences.getInstance();

      await prefs.setBool(_locationPermissionRequestedKey, _permissionRequested);
      await prefs.setBool(_locationPermissionGrantedKey, _permissionGranted);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
      if (_lastKnownPosition != null) {
        await prefs.setDouble(_lastKnownLatitudeKey, _lastKnownPosition!.latitude);
        await prefs.setDouble(_lastKnownLongitudeKey, _lastKnownPosition!.longitude);
        await prefs.setInt(_lastLocationUpdateKey, _lastKnownPosition!.timestamp.millisecondsSinceEpoch);
      }

      debugPrint('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: $e');
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏—Å—å –ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ä–∞–Ω–µ–µ
  Future<bool> hasRequestedPermissionBefore() async {
    await _loadSettings();
    return _permissionRequested;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
  Future<bool> checkLocationPermission() async {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ permission_handler
      final permissionStatus = await Permission.location.status;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ geolocator
      final geolocatorPermission = await Geolocator.checkPermission();

      final isGranted = permissionStatus == PermissionStatus.granted &&
          (geolocatorPermission == LocationPermission.always ||
              geolocatorPermission == LocationPermission.whileInUse);

      _permissionGranted = isGranted;
      await _saveSettings();

      debugPrint('üåç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: permission_handler:$permissionStatus, geolocator:$geolocatorPermission, result:$isGranted');

      return isGranted;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: $e');
      return false;
    }
  }

  // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é (–°–ò–°–¢–ï–ú–ù–´–ô –î–ò–ê–õ–û–ì)
  Future<bool> requestLocationPermission() async {
    try {
      debugPrint('üåç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—ã–π –¥–∏–∞–ª–æ–≥...');

      // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –±—ã–ª–æ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
      _permissionRequested = true;

      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ —Å–ª—É–∂–±—ã –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
      bool serviceEnabled = await Geolocator.isLocationServiceEnabled();
      if (!serviceEnabled) {
        debugPrint('‚ùå –°–ª—É–∂–±—ã –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã');
        await _saveSettings();
        return false;
      }

      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ geolocator (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –¥–∏–∞–ª–æ–≥)
      LocationPermission geolocatorPermission = await Geolocator.requestPermission();

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      final isGranted = geolocatorPermission == LocationPermission.always ||
          geolocatorPermission == LocationPermission.whileInUse;

      _permissionGranted = isGranted;
      await _saveSettings();

      debugPrint('üåç –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: $geolocatorPermission, granted:$isGranted');

      return isGranted;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é: $e');
      _permissionRequested = true;
      _permissionGranted = false;
      await _saveSettings();
      return false;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
  Future<Position?> getCurrentPosition() async {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      if (!await checkLocationPermission()) {
        debugPrint('‚ùå –ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è');
        return _lastKnownPosition;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ —Å–ª—É–∂–±—ã –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
      bool serviceEnabled = await Geolocator.isLocationServiceEnabled();
      if (!serviceEnabled) {
        debugPrint('‚ùå –°–ª—É–∂–±—ã –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã');
        return _lastKnownPosition;
      }

      debugPrint('üåç –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ...');

      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é
      Position position = await Geolocator.getCurrentPosition(
        desiredAccuracy: LocationAccuracy.high,
        timeLimit: const Duration(seconds: 15),
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
      _lastKnownPosition = position;
      await _saveSettings();

      debugPrint(
        '‚úÖ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ: ${position.latitude.toStringAsFixed(4)}, ${position.longitude.toStringAsFixed(4)}',
      );

      return position;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: $e');
      return _lastKnownPosition;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è (–±—ã—Å—Ç—Ä–æ–µ)
  Future<Position?> getLastKnownPosition() async {
    try {
      if (!await checkLocationPermission()) {
        return _lastKnownPosition;
      }

      final lastPosition = await Geolocator.getLastKnownPosition();

      if (lastPosition != null) {
        _lastKnownPosition = lastPosition;
        await _saveSettings();

        debugPrint(
          '‚ö° –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ${lastPosition.latitude.toStringAsFixed(4)}, ${lastPosition.longitude.toStringAsFixed(4)}',
        );
      }

      return lastPosition ?? _lastKnownPosition;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: $e');
      return _lastKnownPosition;
    }
  }

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏
  Future<void> openAppSettings() async {
    try {
      await openAppSettings();
      debugPrint('üåç –û—Ç–∫—Ä—ã—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: $e');
    }
  }

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  Future<void> openLocationSettings() async {
    try {
      await Geolocator.openLocationSettings();
      debugPrint('üåç –û—Ç–∫—Ä—ã—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: $e');
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞—Ä–µ–ª–æ –ª–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
  bool isLocationStale({Duration maxAge = const Duration(hours: 1)}) {
    if (_lastKnownPosition == null) return true;

    final now = DateTime.now();
    final locationAge = now.difference(_lastKnownPosition!.timestamp);

    return locationAge > maxAge;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ–π —Å—Ç—Ä–æ–∫–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
  String getLocationDisplayString() {
    if (_lastKnownPosition == null) {
      return _currentLocale == 'en'
          ? 'Location unknown'
          : '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }

    final lat = _lastKnownPosition!.latitude.toStringAsFixed(4);
    final lng = _lastKnownPosition!.longitude.toStringAsFixed(4);

    return '$lat, $lng';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
  String getPermissionStatusMessage() {
    if (!_permissionRequested) {
      return _currentLocale == 'en'
          ? 'Location permission not requested yet'
          : '–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –µ—â–µ –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–æ—Å—å';
    }

    if (!_permissionGranted) {
      return _currentLocale == 'en'
          ? 'Location permission denied'
          : '–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ';
    }

    return _currentLocale == 'en'
        ? 'Location permission granted'
        : '–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ';
  }

  // –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  Future<void> resetSettings() async {
    try {
      final prefs = await SharedPreferences.getInstance();

      await prefs.remove(_locationPermissionRequestedKey);
      await prefs.remove(_locationPermissionGrantedKey);
      await prefs.remove(_lastKnownLatitudeKey);
      await prefs.remove(_lastKnownLongitudeKey);
      await prefs.remove(_lastLocationUpdateKey);

      _permissionRequested = false;
      _permissionGranted = false;
      _lastKnownPosition = null;

      debugPrint('üåç –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å–±—Ä–æ—à–µ–Ω—ã');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: $e');
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏
  double getDistanceBetween(double lat1, double lng1, double lat2, double lng2) {
    return Geolocator.distanceBetween(lat1, lng1, lat2, lng2);
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–æ —Ç–æ—á–∫–∏
  double? getDistanceToPoint(double latitude, double longitude) {
    if (_lastKnownPosition == null) return null;

    return getDistanceBetween(
      _lastKnownPosition!.latitude,
      _lastKnownPosition!.longitude,
      latitude,
      longitude,
    );
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
  String formatDistance(double meters) {
    if (meters < 1000) {
      return _currentLocale == 'en'
          ? '${meters.round()} m'
          : '${meters.round()} –º';
    } else {
      final km = meters / 1000;
      return _currentLocale == 'en'
          ? '${km.toStringAsFixed(1)} km'
          : '${km.toStringAsFixed(1)} –∫–º';
    }
  }
}
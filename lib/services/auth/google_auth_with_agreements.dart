// –ü—É—Ç—å: lib/services/auth/google_auth_with_agreements.dart

import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'google_sign_in_service.dart';
import '../user_consent_service.dart';
import '../../widgets/user_agreements_dialog.dart';
import '../../localization/app_localizations.dart';

/// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è Google –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–æ–≥–ª–∞—à–µ–Ω–∏–π
class GoogleAuthWithAgreements {
  static final GoogleAuthWithAgreements _instance = GoogleAuthWithAgreements._internal();
  factory GoogleAuthWithAgreements() => _instance;
  GoogleAuthWithAgreements._internal();

  final GoogleSignInService _googleSignInService = GoogleSignInService();
  final UserConsentService _consentService = UserConsentService();

  /// –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Google —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–æ–≥–ª–∞—à–µ–Ω–∏–π
  Future<UserCredential?> signInWithGoogleAndCheckAgreements(
      BuildContext context, {
        VoidCallback? onAuthSuccess,
      }) async {
    try {
      debugPrint('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Google —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–æ–≥–ª–∞—à–µ–Ω–∏–π');

      // –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω—è–µ–º Google –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
      final userCredential = await _googleSignInService.signInWithGoogle(context);

      if (userCredential == null) {
        debugPrint('‚ùå Google –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –∏–ª–∏ –Ω–µ—É–¥–∞—á–Ω–∞');
        return null;
      }

      final user = userCredential.user;
      if (user == null) {
        debugPrint('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å null –ø–æ—Å–ª–µ Google –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        return null;
      }

      debugPrint('‚úÖ Google –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ –¥–ª—è: ${user.email}');

      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–æ–≥–ª–∞—Å–∏—è –∏–∑ Firestore
      await _consentService.syncConsentsFromFirestore(user.uid);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–æ–≤—ã–π –ª–∏ —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –ø—Ä–∏–Ω—è—Ç—ã –ª–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
      final isNewUser = await _consentService.isNewGoogleUser(user.uid);
      final hasAcceptedAgreements = await _consentService.hasUserAcceptedAllConsents();

      debugPrint('üîç –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $isNewUser, –°–æ–≥–ª–∞—à–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç—ã: $hasAcceptedAgreements');

      if (isNewUser || !hasAcceptedAgreements) {
        debugPrint('üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π');

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π –∏ –∂–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        final agreementsAccepted = await _showAgreementsDialog(context, onAuthSuccess);

        if (!agreementsAccepted) {
          debugPrint('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–∏–Ω—è–ª —Å–æ–≥–ª–∞—à–µ–Ω–∏—è, –≤—ã—Ö–æ–¥–∏–º –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞');

          // –í—ã—Ö–æ–¥–∏–º –∏–∑ Google –∞–∫–∫–∞—É–Ω—Ç–∞ –µ—Å–ª–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –Ω–µ –ø—Ä–∏–Ω—è—Ç—ã
          await _googleSignInService.signOutGoogle();
          return null;
        }
      } else {
        debugPrint('‚úÖ –°–æ–≥–ª–∞—à–µ–Ω–∏—è —É–∂–µ –ø—Ä–∏–Ω—è—Ç—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º');

        // –ï—Å–ª–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è —É–∂–µ –ø—Ä–∏–Ω—è—Ç—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–ª–ª–±—ç–∫
        if (context.mounted) {
          _showSuccessMessage(context);

          if (onAuthSuccess != null) {
            debugPrint('üéØ –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
            Navigator.of(context).pushReplacementNamed('/home');
            Future.delayed(const Duration(milliseconds: 500), () {
              onAuthSuccess();
            });
          } else {
            Navigator.of(context).pushReplacementNamed('/home');
          }
        }
      }

      return userCredential;

    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ Google –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å —Å–æ–≥–ª–∞—à–µ–Ω–∏—è–º–∏: $e');

      if (context.mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ${e.toString()}'),
            backgroundColor: Colors.red,
            duration: const Duration(seconds: 4),
          ),
        );
      }

      return null;
    }
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  Future<bool> _showAgreementsDialog(
      BuildContext context,
      VoidCallback? onAuthSuccess,
      ) async {
    if (!context.mounted) return false;

    bool agreementsAccepted = false;

    await showDialog<void>(
      context: context,
      barrierDismissible: false, // –ù–µ–ª—å–∑—è –∑–∞–∫—Ä—ã—Ç—å –Ω–∞–∂–∞—Ç–∏–µ–º –≤–Ω–µ –¥–∏–∞–ª–æ–≥–∞
      builder: (BuildContext dialogContext) {
        return UserAgreementsDialog(
          onAgreementsAccepted: () {
            debugPrint('‚úÖ –°–æ–≥–ª–∞—à–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç—ã –≤ –¥–∏–∞–ª–æ–≥–µ');
            agreementsAccepted = true;

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (context.mounted) {
              _showSuccessMessage(context);

              // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –∏ –∫–æ–ª–ª–±—ç–∫
              if (onAuthSuccess != null) {
                debugPrint('üéØ –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫ –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è —Å–æ–≥–ª–∞—à–µ–Ω–∏–π');
                Navigator.of(context).pushReplacementNamed('/home');
                Future.delayed(const Duration(milliseconds: 500), () {
                  onAuthSuccess();
                });
              } else {
                Navigator.of(context).pushReplacementNamed('/home');
              }
            }
          },
          onCancel: () {
            debugPrint('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –ø—Ä–∏–Ω—è—Ç–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π');
            agreementsAccepted = false;
          },
        );
      },
    );

    return agreementsAccepted;
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—Ö–æ–¥–µ
  void _showSuccessMessage(BuildContext context) {
    if (!context.mounted) return;

    final localizations = AppLocalizations.of(context);
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text(localizations.translate('google_login_successful')),
        backgroundColor: Colors.green,
        duration: const Duration(seconds: 2),
      ),
    );
  }
}
// –ü—É—Ç—å: lib/services/subscription/subscription_service.dart

import 'dart:async';
import 'dart:io';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:in_app_purchase/in_app_purchase.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import '../../constants/subscription_constants.dart';
import '../../models/subscription_model.dart';
import '../../models/usage_limits_model.dart';
import '../../models/offline_usage_result.dart';
import '../../services/firebase/firebase_service.dart';
import '../../services/subscription/usage_limits_service.dart';
import '../../services/offline/offline_storage_service.dart';
import '../../utils/network_utils.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –∏ –ø–æ–∫—É–ø–∫–∞–º–∏
class SubscriptionService {
  static final SubscriptionService _instance = SubscriptionService._internal();
  factory SubscriptionService() => _instance;
  SubscriptionService._internal();

  final InAppPurchase _inAppPurchase = InAppPurchase.instance;

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: FirebaseService —Ç–µ–ø–µ—Ä—å –∏–Ω–∂–µ–∫—Ç–∏—Ä—É–µ—Ç—Å—è –∏–∑–≤–Ω–µ
  FirebaseService? _firebaseService;
  final UsageLimitsService _usageLimitsService = UsageLimitsService();

  // üî• –ù–û–í–û–ï: –û—Ñ–ª–∞–π–Ω —Å—Ç–æ—Ä–∞–¥–∂ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
  final OfflineStorageService _offlineStorage = OfflineStorageService();

  // –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è Google Play Review
  static const List<String> _testAccounts = [
    'googleplay.reviewer@gmail.com',
    'googleplayreviewer@gmail.com',
    'test.reviewer@gmail.com',
    'reviewer@googleplay.com',
    'driftnotes.test@gmail.com'
  ];

  // –ö—ç—à —Ç–µ–∫—É—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
  SubscriptionModel? _cachedSubscription;

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É Firebase
  DateTime? _lastUsageCacheUpdate;
  static const Duration _cacheValidDuration = Duration(minutes: 5);

  // –°—Ç—Ä–∏–º –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ–¥–ø–∏—Å–∫–∏
  StreamSubscription<List<PurchaseDetails>>? _purchaseSubscription;
  final StreamController<SubscriptionModel> _subscriptionController = StreamController<SubscriptionModel>.broadcast();

  // –°—Ç—Ä–∏–º –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
  final StreamController<SubscriptionStatus> _subscriptionStatusController = StreamController<SubscriptionStatus>.broadcast();

  // –°—Ç—Ä–∏–º –¥–ª—è UI
  Stream<SubscriptionModel> get subscriptionStream => _subscriptionController.stream;

  // –°—Ç—Ä–∏–º —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –≤–∏–¥–∂–µ—Ç–∞–º–∏
  Stream<SubscriptionStatus> get subscriptionStatusStream => _subscriptionStatusController.stream;

  /// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ FirebaseService (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è ServiceManager'–æ–º)
  void setFirebaseService(FirebaseService firebaseService) {
    _firebaseService = firebaseService;
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ FirebaseService (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
  FirebaseService get firebaseService {
    if (_firebaseService == null) {
      throw Exception('SubscriptionService –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω! FirebaseService –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
    }
    return _firebaseService!;
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
  bool _isTestAccount() {
    try {
      final currentUser = firebaseService.currentUser;
      if (currentUser?.email == null) return false;

      final email = currentUser!.email!.toLowerCase().trim();
      final isTest = _testAccounts.contains(email);

      if (kDebugMode && isTest) {
        debugPrint('üß™ –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç: $email');
      }

      return isTest;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: $e');
      }
      return false;
    }
  }

  // –ü—É–±–ª–∏—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  Future<bool> isTestReviewerAccount() async {
    return _isTestAccount();
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ email —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  String? getCurrentUserEmail() {
    try {
      return firebaseService.currentUser?.email?.toLowerCase().trim();
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è email: $e');
      }
      return null;
    }
  }

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
  Future<void> initialize() async {
    try {
      if (kDebugMode) {
        debugPrint('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SubscriptionService...');
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ FirebaseService —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
      if (_firebaseService == null) {
        if (kDebugMode) {
          debugPrint('‚ö†Ô∏è FirebaseService –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é SubscriptionService');
        }
        return;
      }

      // üî• –ù–û–í–û–ï: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ñ–ª–∞–π–Ω —Å—Ç–æ—Ä–∞–¥–∂
      await _offlineStorage.initialize();

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UsageLimitsService (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞)
      await _usageLimitsService.initialize();

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É —Å–µ—Ä–≤–∏—Å–∞–º–∏
      _usageLimitsService.setSubscriptionService(this);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫
      final isAvailable = await _inAppPurchase.isAvailable();
      if (!isAvailable) {
        if (kDebugMode) {
          debugPrint('‚ùå In-App Purchase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ —ç—Ç–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ');
        }
        return;
      }

      // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∫—É–ø–æ–∫
      _purchaseSubscription = _inAppPurchase.purchaseStream.listen(
        _handlePurchaseUpdates,
        onDone: () {
          if (kDebugMode) {
            debugPrint('üîÑ Purchase stream –∑–∞–∫—Ä—ã—Ç');
          }
        },
        onError: (error) {
          if (kDebugMode) {
            debugPrint('‚ùå –û—à–∏–±–∫–∞ –≤ purchase stream: $error');
          }
        },
      );

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–¥–ø–∏—Å–∫—É
      await loadCurrentSubscription();

      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∫—É–ø–∫–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      await restorePurchases();

      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –ª–∏–º–∏—Ç–æ–≤ –≤ –Ω–æ–≤–æ–π Firebase —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
      await _initializeUsageLimits();

      if (kDebugMode) {
        debugPrint('‚úÖ SubscriptionService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SubscriptionService: $e');
      }
    }
  }

  // üî• –ù–û–í–´–ô –ú–ï–¢–û–î: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ª–∏–º–∏—Ç–æ–≤ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å—Ç—Ä—É–∫—Ç—É—Ä—É
  Future<void> _initializeUsageLimits() async {
    try {
      debugPrint('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ª–∏–º–∏—Ç–æ–≤ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å—Ç—Ä—É–∫—Ç—É—Ä—É...');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç usage_limits –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      final usageLimitsDoc = await firebaseService.getUserUsageLimits();

      if (!usageLimitsDoc.exists) {
        debugPrint('üìä –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç—Å—è —á–µ—Ä–µ–∑ getUserUsageLimits()
      } else {
        debugPrint('üìä –õ–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç');
        final data = usageLimitsDoc.data() as Map<String, dynamic>;
        debugPrint('üìä –¢–µ–∫—É—â–∏–µ –ª–∏–º–∏—Ç—ã: $data');
      }

      debugPrint('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ª–∏–º–∏—Ç–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å—Ç—Ä—É–∫—Ç—É—Ä—É');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ª–∏–º–∏—Ç–æ–≤: $e');
    }
  }

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ú–ï–¢–û–î–´ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π Firebase

  /// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–π Firebase —Å–∏—Å—Ç–µ–º—ã
  Future<bool> canCreateContentOffline(ContentType contentType) async {
    try {
      // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ - –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø
      if (_isTestAccount()) {
        if (kDebugMode) {
          debugPrint('üß™ –¢–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç - –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ $contentType');
        }
        return true;
      }

      // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞
      final cachedSubscription = await _offlineStorage.getCachedSubscriptionStatus();
      if (cachedSubscription?.isPremium == true) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∫—ç—à–∞
        if (await _offlineStorage.isSubscriptionCacheValid()) {
          if (kDebugMode) {
            debugPrint('üî• –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω - —Ä–∞–∑—Ä–µ—à–∞–µ–º $contentType');
          }
          return true;
        }
      }

      // 3. üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É Firebase –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤
      final canCreate = await firebaseService.canCreateItem(_getFirebaseItemType(contentType));

      if (kDebugMode) {
        debugPrint('üî• –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É: $contentType -> ${canCreate['canProceed']}');
        debugPrint('üî• –î–µ—Ç–∞–ª–∏: ${canCreate['currentCount']}/${canCreate['maxLimit']} (–æ—Å—Ç–∞–ª–æ—Å—å: ${canCreate['remaining']})');
      }

      return canCreate['canProceed'] ?? false;

    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ñ–ª–∞–π–Ω —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: $e');
      }
      // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ (–ø—Ä–∏–Ω—Ü–∏–ø "fail open")
      return true;
    }
  }

  /// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É
  Future<OfflineUsageResult> checkOfflineUsage(ContentType contentType) async {
    try {
      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É Firebase
      final limitCheck = await firebaseService.canCreateItem(_getFirebaseItemType(contentType));

      final canCreate = limitCheck['canProceed'] ?? false;
      final currentUsage = limitCheck['currentCount'] ?? 0;
      final maxLimit = limitCheck['maxLimit'] ?? 0;
      final remaining = limitCheck['remaining'] ?? 0;

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
      OfflineLimitWarningType warningType;
      String message;

      if (!canCreate) {
        warningType = OfflineLimitWarningType.blocked;
        message = '–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç ${_getContentTypeName(contentType)} ($maxLimit)';
      } else if (remaining <= 2) {
        warningType = OfflineLimitWarningType.approaching;
        message = '–û—Å—Ç–∞–ª–æ—Å—å $remaining ${_getContentTypeName(contentType)}';
      } else {
        warningType = OfflineLimitWarningType.normal;
        message = '–î–æ—Å—Ç—É–ø–Ω–æ $remaining ${_getContentTypeName(contentType)}';
      }

      return OfflineUsageResult(
        canCreate: canCreate,
        warningType: warningType,
        message: message,
        currentUsage: currentUsage,
        limit: maxLimit,
        remaining: remaining,
        contentType: contentType,
      );
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ñ–ª–∞–π–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: $e');
      }

      return OfflineUsageResult(
        canCreate: true,
        warningType: OfflineLimitWarningType.normal,
        message: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤',
        currentUsage: 0,
        limit: getLimit(contentType),
        remaining: getLimit(contentType),
        contentType: contentType,
      );
    }
  }

  /// üî• –ù–û–í–´–ô –ú–ï–¢–û–î: –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ ContentType –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –Ω–æ–≤–æ–π Firebase —Å–∏—Å—Ç–µ–º—ã
  String _getFirebaseItemType(ContentType contentType) {
    switch (contentType) {
      case ContentType.fishingNotes:
        return 'notesCount';
      case ContentType.markerMaps:
        return 'markerMapsCount';
      case ContentType.expenses:
        return 'expensesCount';
      case ContentType.depthChart:
        return 'depthChartCount';
    }
  }

  /// üî• –ù–û–í–´–ô –ú–ï–¢–û–î: –ü–æ–ª—É—á–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  String _getContentTypeName(ContentType contentType) {
    switch (contentType) {
      case ContentType.fishingNotes:
        return '–∑–∞–º–µ—Ç–æ–∫';
      case ContentType.markerMaps:
        return '–∫–∞—Ä—Ç';
      case ContentType.expenses:
        return '–ø–æ–µ–∑–¥–æ–∫';
      case ContentType.depthChart:
        return '–≥—Ä–∞—Ñ–∏–∫–æ–≤ –≥–ª—É–±–∏–Ω';
    }
  }

  /// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É
  Future<int> getCurrentOfflineUsage(ContentType contentType) async {
    try {
      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É Firebase –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      final stats = await firebaseService.getUsageStatistics();

      final String firebaseKey = _getFirebaseItemType(contentType);
      final currentUsage = stats[firebaseKey] ?? 0;

      if (kDebugMode) {
        debugPrint('üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ $contentType —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É: $currentUsage');
      }

      return currentUsage;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ñ–ª–∞–π–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: $e');
      }
      return 0;
    }
  }

  /// –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ –æ–Ω–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ
  Future<void> cacheSubscriptionDataOnline() async {
    try {
      if (kDebugMode) {
        debugPrint('üîÑ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∏ –æ–Ω–ª–∞–π–Ω...');
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ç–∏
      if (!await NetworkUtils.isNetworkAvailable()) {
        if (kDebugMode) {
          debugPrint('‚ö†Ô∏è –ù–µ—Ç —Å–µ—Ç–∏ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ');
        }
        return;
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É
      final subscription = await loadCurrentSubscription();

      // –ö—ç—à–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É
      await _offlineStorage.cacheSubscriptionStatus(subscription);

      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö—ç—à–∏—Ä—É–µ–º –ª–∏–º–∏—Ç—ã —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É Firebase
      try {
        final usageLimits = await _loadUsageLimitsFromNewSystem();
        if (usageLimits != null) {
          await _offlineStorage.cacheUsageLimits(usageLimits);
        }
      } catch (e) {
        if (kDebugMode) {
          debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤: $e');
        }
      }

      if (kDebugMode) {
        debugPrint('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É—Å–ø–µ—à–Ω–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã');
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∏: $e');
      }
    }
  }

  /// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ñ–ª–∞–π–Ω –∫—ç—à–∞
  Future<void> refreshOfflineCache() async {
    try {
      if (kDebugMode) {
        debugPrint('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ñ–ª–∞–π–Ω –∫—ç—à–∞...');
      }

      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É Firebase
      await _refreshUsageCacheFromNewSystem();

      // –ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å —Å–µ—Ç—å
      await cacheSubscriptionDataOnline();

      if (kDebugMode) {
        debugPrint('‚úÖ –û—Ñ–ª–∞–π–Ω –∫—ç—à –æ–±–Ω–æ–≤–ª–µ–Ω');
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ñ–ª–∞–π–Ω –∫—ç—à–∞: $e');
      }
    }
  }

  /// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É
  Future<void> incrementOfflineUsage(ContentType contentType) async {
    try {
      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É Firebase –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
      final success = await firebaseService.incrementUsageCount(_getFirebaseItemType(contentType));

      if (kDebugMode) {
        if (success) {
          debugPrint('üìà –£–≤–µ–ª–∏—á–µ–Ω —Å—á–µ—Ç—á–∏–∫ $contentType —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É');
        } else {
          debugPrint('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ $contentType');
        }
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞: $e');
      }
    }
  }

  /// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–º–µ–Ω—å—à–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É
  Future<void> decrementOfflineUsage(ContentType contentType) async {
    try {
      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É Firebase –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
      // –ü–æ–∫–∞ —á—Ç–æ –Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ —É–º–µ–Ω—å—à–µ–Ω–∏—è, –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å
      // –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –æ—Ñ–ª–∞–π–Ω —Å—Ç–æ—Ä–∞–∂–∞
      await _offlineStorage.decrementLocalUsage(contentType);

      if (kDebugMode) {
        final localCount = await _offlineStorage.getLocalUsageCount(contentType);
        debugPrint('üìâ –£–º–µ–Ω—å—à–µ–Ω –æ—Ñ–ª–∞–π–Ω —Å—á–µ—Ç—á–∏–∫ $contentType: –ª–æ–∫–∞–ª—å–Ω–æ=$localCount');
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ —É–º–µ–Ω—å—à–µ–Ω–∏—è –æ—Ñ–ª–∞–π–Ω —Å—á–µ—Ç—á–∏–∫–∞: $e');
      }
    }
  }

  /// üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ UsageLimitsModel –∏–∑ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã Firebase
  Future<UsageLimitsModel?> _loadUsageLimitsFromNewSystem() async {
    try {
      final userId = firebaseService.currentUserId;
      if (userId == null) return null;

      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã Firebase
      final stats = await firebaseService.getUsageStatistics();

      return UsageLimitsModel(
        userId: userId,
        notesCount: stats['notesCount'] ?? 0,
        markerMapsCount: stats['markerMapsCount'] ?? 0,
        expensesCount: stats['expensesCount'] ?? 0,
        lastResetDate: DateTime.now(),
        updatedAt: DateTime.now(),
      );
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–∏–º–∏—Ç–æ–≤ –∏–∑ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: $e');
      }
      return null;
    }
  }

  /// üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É
  Future<Map<String, dynamic>> getOfflineUsageStatistics() async {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã Firebase
      final stats = await firebaseService.getUsageStatistics();

      return {
        'newSystem': stats,
        'exists': stats['exists'] ?? false,
      };
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É: $e');
      }
      return {};
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–∫–∞–∑–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ª–∏–º–∏—Ç–µ
  Future<bool> shouldShowLimitWarning(ContentType contentType) async {
    try {
      final result = await checkOfflineUsage(contentType);
      return result.shouldShowWarning;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $e');
      }
      return false;
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–∫–∞–∑–∞ –¥–∏–∞–ª–æ–≥–∞ –ø—Ä–µ–º–∏—É–º
  Future<bool> shouldShowPremiumDialog(ContentType contentType) async {
    try {
      final result = await checkOfflineUsage(contentType);
      return result.shouldShowPremiumDialog;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥–∞ –ø—Ä–µ–º–∏—É–º: $e');
      }
      return false;
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—ç—à–µ –ø–æ–¥–ø–∏—Å–∫–∏
  Future<Map<String, dynamic>> getSubscriptionCacheInfo() async {
    try {
      final cachedSubscription = await _offlineStorage.getCachedSubscriptionStatus();
      final isValid = await _offlineStorage.isSubscriptionCacheValid();

      return {
        'hasCachedSubscription': cachedSubscription != null,
        'isPremium': cachedSubscription?.isPremium ?? false,
        'isCacheValid': isValid,
        'status': cachedSubscription?.status.name,
        'expirationDate': cachedSubscription?.expirationDate?.toIso8601String(),
      };
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—ç—à–µ –ø–æ–¥–ø–∏—Å–∫–∏: $e');
      }
      return {
        'hasCachedSubscription': false,
        'isPremium': false,
        'isCacheValid': false,
      };
    }
  }

  /// –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤ (–¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏)
  Future<void> clearLocalCounters() async {
    try {
      await _offlineStorage.resetLocalUsageCounters();
      if (kDebugMode) {
        debugPrint('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏ –æ—á–∏—â–µ–Ω—ã');
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤: $e');
      }
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤
  Future<Map<ContentType, int>> getAllLocalCounters() async {
    try {
      return await _offlineStorage.getAllLocalUsageCounters();
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤: $e');
      }
      return {};
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è UI (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è)
  bool canCreateContentSync(ContentType contentType) {
    try {
      // –î–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ - –≤—Å–µ–≥–¥–∞ —Ä–∞–∑—Ä–µ—à–∞–µ–º
      if (_isTestAccount()) {
        return true;
      }

      // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
      // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
      final serverUsage = getCurrentUsageSync(contentType);
      final limit = getLimit(contentType);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–π –ª–∏–º–∏—Ç
      return serverUsage < limit;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: $e');
      }
      return true; // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º
    }
  }

  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–∑ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Firebase
  Future<void> _refreshUsageCacheFromNewSystem() async {
    try {
      if (kDebugMode) {
        debugPrint('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–∑ –Ω–æ–≤–æ–π Firebase —Å–∏—Å—Ç–µ–º—ã...');
      }

      // –ü—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∫—ç—à–∞, —Ç–∞–∫ –∫–∞–∫ –Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é —Å Firebase
      _lastUsageCacheUpdate = DateTime.now();

      if (kDebugMode) {
        // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        final stats = await firebaseService.getUsageStatistics();
        debugPrint('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–∑ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: $stats');
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞ –∏–∑ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: $e');
      }
    }
  }

  /// –ù–û–í–´–ô –ú–ï–¢–û–î: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –∫—ç—à–∞
  bool _isUsageCacheValid() {
    if (_lastUsageCacheUpdate == null) return false;
    return DateTime.now().difference(_lastUsageCacheUpdate!) < _cacheValidDuration;
  }

  /// üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–π Firebase —Å–∏—Å—Ç–µ–º—ã
  Future<bool> canCreateContent(ContentType contentType) async {
    try {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –ø—Ä–µ–º–∏—É–º - —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Å—ë
      if (hasPremiumAccess()) {
        return true;
      }

      // –î–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ –≥–ª—É–±–∏–Ω - —Ç–æ–ª—å–∫–æ –ø—Ä–µ–º–∏—É–º
      if (contentType == ContentType.depthChart) {
        return false;
      }

      // üî• –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É
      return await canCreateContentOffline(contentType);
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: $e');
      }
      return false;
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–º–∏—É–º –¥–æ—Å—Ç—É–ø–∞ —Å —É—á–µ—Ç–æ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
  bool hasPremiumAccess() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –ü–ï–†–í–´–ú
    if (_isTestAccount()) {
      if (kDebugMode) {
        debugPrint('üß™ –¢–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –∏–º–µ–µ—Ç –ø–æ–ª–Ω—ã–π –ø—Ä–µ–º–∏—É–º –¥–æ—Å—Ç—É–ø');
      }
      return true;
    }

    // –û–±—ã—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞
    return _cachedSubscription?.isPremium ?? false;
  }

  /// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É
  Future<int> getCurrentUsage(ContentType contentType) async {
    try {
      return await getCurrentOfflineUsage(contentType);
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: $e');
      }
      return 0;
    }
  }

  /// –û–ë–ù–û–í–õ–ï–ù: –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º
  int getCurrentUsageSync(ContentType contentType) {
    try {
      // –î–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      // –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
      return 0; // –í—Ä–µ–º–µ–Ω–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (sync): $e');
      }
      return 0;
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –ø–æ —Ç–∏–ø—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å —É—á–µ—Ç–æ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
  int getLimit(ContentType contentType) {
    try {
      // –ï—Å–ª–∏ –ø—Ä–µ–º–∏—É–º (–≤–∫–ª—é—á–∞—è —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã) - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø
      if (hasPremiumAccess()) {
        return SubscriptionConstants.unlimitedValue;
      }

      // –î–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ª–∏–º–∏—Ç—ã –∏–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
      return SubscriptionConstants.getContentLimit(contentType);
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞: $e');
      }
      return SubscriptionConstants.getContentLimit(contentType);
    }
  }

  /// üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É
  Future<bool> incrementUsage(ContentType contentType) async {
    try {
      // üî• –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã Google Play - –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –ë–ï–ó —Å—á–µ—Ç—á–∏–∫–æ–≤
      if (_isTestAccount()) {
        if (kDebugMode) {
          debugPrint('üß™ –¢–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç Google Play - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –¥–ª—è $contentType');
        }
        return true;
      }

      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–ª—è –í–°–ï–• –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤–∫–ª—é—á–∞—è –æ–±—ã—á–Ω—ã—Ö –ø—Ä–µ–º–∏—É–º) - –í–°–ï–ì–î–ê —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏
      await incrementOfflineUsage(contentType);

      if (kDebugMode) {
        debugPrint('üìà –°—á–µ—Ç—á–∏–∫ —É–≤–µ–ª–∏—á–µ–Ω –¥–ª—è $contentType');
      }

      return true;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: $e');
      }
      return false;
    }
  }

  /// –û–ë–ù–û–í–õ–ï–ù: –£–º–µ–Ω—å—à–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ (–ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞)
  Future<bool> decrementUsage(ContentType contentType) async {
    try {
      await decrementOfflineUsage(contentType);
      return true;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: $e');
      }
      return false;
    }
  }

  /// –û–ë–ù–û–í–õ–ï–ù: –°–±—Ä–æ—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ —Ç–∏–ø—É (–¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ü–µ–ª–µ–π)
  Future<void> resetUsage(ContentType contentType) async {
    try {
      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Å–±—Ä–æ—Å–∞
      await firebaseService.resetUserUsageLimits(resetReason: 'admin_reset_${contentType.name}');
      if (kDebugMode) {
        debugPrint('‚úÖ –°–±—Ä–æ—à–µ–Ω —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —Ç–∏–ø–∞: $contentType');
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: $e');
      }
    }
  }

  /// üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É
  Future<Map<ContentType, Map<String, int>>> getUsageInfo() async {
    try {
      final result = <ContentType, Map<String, int>>{};

      for (final contentType in ContentType.values) {
        final totalUsage = await getCurrentOfflineUsage(contentType);
        result[contentType] = {
          'current': totalUsage,
          'limit': getLimit(contentType),
        };
      }

      return result;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏: $e');
      }
      return {};
    }
  }

  /// –û–ë–ù–û–í–õ–ï–ù: –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è getUsageInfo –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  Map<ContentType, Map<String, int>> getUsageInfoSync() {
    try {
      final result = <ContentType, Map<String, int>>{};

      for (final contentType in ContentType.values) {
        result[contentType] = {
          'current': getCurrentUsageSync(contentType),
          'limit': getLimit(contentType),
        };
      }

      return result;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ (sync): $e');
      }
      return {};
    }
  }

  /// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É
  Future<Map<String, dynamic>> getUsageStatistics() async {
    try {
      return await firebaseService.getUsageStatistics();
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: $e');
      }
      return {};
    }
  }

  /// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é Firebase —Å–∏—Å—Ç–µ–º—É
  Future<void> refreshUsageLimits() async {
    try {
      await _refreshUsageCacheFromNewSystem();
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤: $e');
      }
    }
  }

  /// –û–ë–ù–û–í–õ–ï–ù: –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
  Future<SubscriptionModel> loadCurrentSubscription() async {
    try {
      final userId = firebaseService.currentUserId;
      if (userId == null) {
        _cachedSubscription = SubscriptionModel.defaultSubscription('');
        _subscriptionStatusController.add(_cachedSubscription!.status);
        return _cachedSubscription!;
      }

      // –ï—Å–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç - —Å–æ–∑–¥–∞–µ–º –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫—É
      if (_isTestAccount()) {
        if (kDebugMode) {
          debugPrint('üß™ –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞');
        }
        _cachedSubscription = SubscriptionModel(
          userId: userId,
          status: SubscriptionStatus.active,
          type: SubscriptionType.yearly,
          expirationDate: DateTime.now().add(const Duration(days: 365)),
          purchaseToken: 'test_account_token',
          platform: Platform.isAndroid ? 'android' : 'ios',
          createdAt: DateTime.now(),
          updatedAt: DateTime.now(),
          isActive: true,
        );

        _subscriptionController.add(_cachedSubscription!);
        _subscriptionStatusController.add(_cachedSubscription!.status);
        return _cachedSubscription!;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
      if (_cachedSubscription != null && _cachedSubscription!.userId == userId) {
        return _cachedSubscription!;
      }

      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Firebase —á–µ—Ä–µ–∑ FirebaseService
      if (await NetworkUtils.isNetworkAvailable()) {
        final doc = await firebaseService.getUserSubscription();

        if (doc.exists && doc.data() != null) {
          _cachedSubscription = SubscriptionModel.fromMap(doc.data()! as Map<String, dynamic>, userId);
        } else {
          _cachedSubscription = SubscriptionModel.defaultSubscription(userId);
        }
      } else {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∞
        _cachedSubscription = await _loadFromCache(userId);
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Å—Ç—Ä–∏–º—ã
      _subscriptionController.add(_cachedSubscription!);
      _subscriptionStatusController.add(_cachedSubscription!.status);

      return _cachedSubscription!;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: $e');
      }
      final userId = firebaseService.currentUserId ?? '';
      _cachedSubscription = SubscriptionModel.defaultSubscription(userId);
      _subscriptionStatusController.add(_cachedSubscription!.status);
      return _cachedSubscription!;
    }
  }

  // === –û–°–¢–ê–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ –û–°–¢–ê–Æ–¢–°–Ø –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô ===
  // (–º–µ—Ç–æ–¥—ã –ø–æ–∫—É–ø–æ–∫, –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π –∏ —Ç.–¥.)

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ–¥–ø–∏—Å–∫–∏
  Future<List<ProductDetails>> getAvailableProducts() async {
    try {
      if (kDebugMode) {
        debugPrint('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');
      }

      final ProductDetailsResponse response = await _inAppPurchase.queryProductDetails(
        SubscriptionConstants.subscriptionProductIds.toSet(),
      );

      if (response.error != null) {
        if (kDebugMode) {
          debugPrint('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${response.error}');
        }
        return [];
      }

      if (kDebugMode) {
        debugPrint('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${response.productDetails.length}');
        for (final product in response.productDetails) {
          debugPrint('üì¶ –ü—Ä–æ–¥—É–∫—Ç: ${product.id} - ${product.price} ${product.currencyCode}');
        }
      }

      return response.productDetails;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤: $e');
      }
      return [];
    }
  }

  /// –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
  Future<bool> purchaseSubscription(String productId) async {
    try {
      if (kDebugMode) {
        debugPrint('üõí –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∫—É–ø–∫—É: $productId');
      }

      // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ–¥—É–∫—Ç–∞
      final products = await getAvailableProducts();
      final product = products.where((p) => p.id == productId).firstOrNull;

      if (product == null) {
        if (kDebugMode) {
          debugPrint('‚ùå –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: $productId');
        }
        return false;
      }

      // –°–æ–∑–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∫—É–ø–∫–∏
      final PurchaseParam purchaseParam = PurchaseParam(
        productDetails: product,
      );

      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∫—É–ø–∫—É
      final bool success = await _inAppPurchase.buyNonConsumable(
        purchaseParam: purchaseParam,
      );

      if (kDebugMode) {
        debugPrint('üõí –ü–æ–∫—É–ø–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞: $success');
      }
      return success;
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏: $e');
      }
      return false;
    }
  }

  /// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫
  Future<void> restorePurchases() async {
    try {
      if (kDebugMode) {
        debugPrint('üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫...');
      }
      await _inAppPurchase.restorePurchases();
      if (kDebugMode) {
        debugPrint('‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫ –∑–∞–ø—É—â–µ–Ω–æ');
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∫—É–ø–æ–∫: $e');
      }
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–æ–∫—É–ø–æ–∫
  Future<void> _handlePurchaseUpdates(List<PurchaseDetails> purchaseDetailsList) async {
    if (kDebugMode) {
      debugPrint('üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–æ–∫—É–ø–æ–∫: ${purchaseDetailsList.length}');
    }

    for (final PurchaseDetails purchaseDetails in purchaseDetailsList) {
      if (kDebugMode) {
        debugPrint('üí≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏: ${purchaseDetails.productID} - ${purchaseDetails.status}');
      }

      switch (purchaseDetails.status) {
        case PurchaseStatus.pending:
          await _handlePendingPurchase(purchaseDetails);
          break;
        case PurchaseStatus.purchased:
          await _handleSuccessfulPurchase(purchaseDetails);
          break;
        case PurchaseStatus.restored:
          await _handleRestoredPurchase(purchaseDetails);
          break;
        case PurchaseStatus.error:
          await _handleFailedPurchase(purchaseDetails);
          break;
        case PurchaseStatus.canceled:
          await _handleCanceledPurchase(purchaseDetails);
          break;
      }

      // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø–æ–∫—É–ø–∫—É –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
      if (purchaseDetails.pendingCompletePurchase) {
        await _inAppPurchase.completePurchase(purchaseDetails);
        if (kDebugMode) {
          debugPrint('‚úÖ –ü–æ–∫—É–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${purchaseDetails.productID}');
        }
      }
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–∂–∏–¥–∞—é—â–µ–π –ø–æ–∫—É–ø–∫–∏
  Future<void> _handlePendingPurchase(PurchaseDetails purchaseDetails) async {
    if (kDebugMode) {
      debugPrint('‚è≥ –ü–æ–∫—É–ø–∫–∞ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏: ${purchaseDetails.productID}');
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ Firebase
    await _updateSubscriptionStatus(
      purchaseDetails,
      SubscriptionStatus.pending,
    );
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏
  Future<void> _handleSuccessfulPurchase(PurchaseDetails purchaseDetails) async {
    if (kDebugMode) {
      debugPrint('‚úÖ –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞: ${purchaseDetails.productID}');
    }

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
      if (await _validatePurchase(purchaseDetails)) {
        await _updateSubscriptionStatus(
          purchaseDetails,
          SubscriptionStatus.active,
        );

        if (kDebugMode) {
          debugPrint('üéâ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞: ${purchaseDetails.productID}');
        }
      } else {
        if (kDebugMode) {
          debugPrint('‚ùå –ü–æ–∫—É–ø–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é: ${purchaseDetails.productID}');
        }
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏: $e');
      }
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –ø–æ–∫—É–ø–∫–∏
  Future<void> _handleRestoredPurchase(PurchaseDetails purchaseDetails) async {
    if (kDebugMode) {
      debugPrint('üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∞: ${purchaseDetails.productID}');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫–ª–∞ –ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞
    if (await _isSubscriptionStillValid(purchaseDetails)) {
      await _updateSubscriptionStatus(
        purchaseDetails,
        SubscriptionStatus.active,
      );
    } else {
      await _updateSubscriptionStatus(
        purchaseDetails,
        SubscriptionStatus.expired,
      );
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—É–¥–∞—á–Ω–æ–π –ø–æ–∫—É–ø–∫–∏
  Future<void> _handleFailedPurchase(PurchaseDetails purchaseDetails) async {
    if (kDebugMode) {
      debugPrint('‚ùå –ù–µ—É–¥–∞—á–Ω–∞—è –ø–æ–∫—É–ø–∫–∞: ${purchaseDetails.productID}');
      debugPrint('‚ùå –û—à–∏–±–∫–∞: ${purchaseDetails.error}');
    }

    // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–Ω–æ–π –ø–æ–∫—É–ø–∫–∏
  Future<void> _handleCanceledPurchase(PurchaseDetails purchaseDetails) async {
    if (kDebugMode) {
      debugPrint('üö´ –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞: ${purchaseDetails.productID}');
    }

    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –ø–æ–∫—É–ø–∫—É - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
  }

  /// –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ Firebase
  Future<void> _updateSubscriptionStatus(
      PurchaseDetails purchaseDetails,
      SubscriptionStatus status,
      ) async {
    try {
      final userId = firebaseService.currentUserId;
      if (userId == null) return;

      final subscriptionType = SubscriptionConstants.getSubscriptionType(purchaseDetails.productID);
      if (subscriptionType == null) return;

      // –í—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É –∏—Å—Ç–µ—á–µ–Ω–∏—è
      DateTime? expirationDate;
      if (status == SubscriptionStatus.active) {
        expirationDate = _calculateExpirationDate(subscriptionType);
      }

      // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
      final subscriptionData = {
        'userId': userId,
        'status': status.name,
        'type': subscriptionType.name,
        'expirationDate': expirationDate != null ? Timestamp.fromDate(expirationDate) : null,
        'purchaseToken': purchaseDetails.purchaseID ?? '',
        'platform': Platform.isAndroid
            ? SubscriptionConstants.androidPlatform
            : SubscriptionConstants.iosPlatform,
        'createdAt': _cachedSubscription?.createdAt != null
            ? Timestamp.fromDate(_cachedSubscription!.createdAt)
            : FieldValue.serverTimestamp(),
        'isActive': status == SubscriptionStatus.active &&
            expirationDate != null &&
            DateTime.now().isBefore(expirationDate),
      };

      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–µ—Ä–µ–∑ FirebaseService –≤ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
      if (await NetworkUtils.isNetworkAvailable()) {
        await firebaseService.updateUserSubscription(subscriptionData);
      }

      // –°–æ–∑–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å –ø–æ–¥–ø–∏—Å–∫–∏
      final subscription = SubscriptionModel(
        userId: userId,
        status: status,
        type: subscriptionType,
        expirationDate: expirationDate,
        purchaseToken: purchaseDetails.purchaseID ?? '',
        platform: Platform.isAndroid
            ? SubscriptionConstants.androidPlatform
            : SubscriptionConstants.iosPlatform,
        createdAt: _cachedSubscription?.createdAt ?? DateTime.now(),
        updatedAt: DateTime.now(),
        isActive: status == SubscriptionStatus.active &&
            expirationDate != null &&
            DateTime.now().isBefore(expirationDate),
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
      await _saveToCache(subscription);
      _cachedSubscription = subscription;

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Å—Ç—Ä–∏–º—ã
      _subscriptionController.add(subscription);
      _subscriptionStatusController.add(subscription.status);

      if (kDebugMode) {
        debugPrint('‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ: $status');
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏: $e');
      }
    }
  }

  /// –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ (–±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
  Future<bool> _validatePurchase(PurchaseDetails purchaseDetails) async {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–æ–∫—É–ø–∫–∏
    // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å ID –ø—Ä–æ–¥—É–∫—Ç–∞
    return purchaseDetails.productID.isNotEmpty;
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏
  Future<bool> _isSubscriptionStillValid(PurchaseDetails purchaseDetails) async {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å —Å–µ—Ä–≤–µ—Ä–æ–º –º–∞–≥–∞–∑–∏–Ω–∞
    // –ü–æ–∫–∞ —á—Ç–æ —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ –≤–∞–ª–∏–¥–Ω–∞
    return true;
  }

  /// –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–∞—Ç—ã –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
  DateTime _calculateExpirationDate(SubscriptionType type) {
    final now = DateTime.now();

    switch (type) {
      case SubscriptionType.monthly:
        return DateTime(now.year, now.month + 1, now.day);
      case SubscriptionType.yearly:
        return DateTime(now.year + 1, now.month, now.day);
    }
  }

  /// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à
  Future<void> _saveToCache(SubscriptionModel subscription) async {
    try {
      final prefs = await SharedPreferences.getInstance();
      await prefs.setString(
        SubscriptionConstants.cachedSubscriptionStatusKey,
        subscription.status.name,
      );
      await prefs.setString(
        SubscriptionConstants.cachedPlanTypeKey,
        subscription.type?.name ?? '',
      );
      if (subscription.expirationDate != null) {
        await prefs.setString(
          SubscriptionConstants.cachedExpirationDateKey,
          subscription.expirationDate!.toIso8601String(),
        );
      }
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫—ç—à: $e');
      }
    }
  }

  /// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∞
  Future<SubscriptionModel> _loadFromCache(String userId) async {
    try {
      final prefs = await SharedPreferences.getInstance();

      final statusString = prefs.getString(SubscriptionConstants.cachedSubscriptionStatusKey);
      final typeString = prefs.getString(SubscriptionConstants.cachedPlanTypeKey);
      final expirationString = prefs.getString(SubscriptionConstants.cachedExpirationDateKey);

      if (statusString == null) {
        return SubscriptionModel.defaultSubscription(userId);
      }

      final status = SubscriptionStatus.values
          .where((s) => s.name == statusString)
          .firstOrNull ?? SubscriptionStatus.none;

      final type = typeString != null && typeString.isNotEmpty
          ? SubscriptionType.values
          .where((t) => t.name == typeString)
          .firstOrNull
          : null;

      final expirationDate = expirationString != null
          ? DateTime.tryParse(expirationString)
          : null;

      final now = DateTime.now();
      final isActive = status == SubscriptionStatus.active &&
          expirationDate != null &&
          now.isBefore(expirationDate);

      return SubscriptionModel(
        userId: userId,
        status: isActive ? status : SubscriptionStatus.expired,
        type: type,
        expirationDate: expirationDate,
        purchaseToken: '',
        platform: Platform.isAndroid
            ? SubscriptionConstants.androidPlatform
            : SubscriptionConstants.iosPlatform,
        createdAt: now,
        updatedAt: now,
        isActive: isActive,
      );
    } catch (e) {
      if (kDebugMode) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –∫—ç—à–∞: $e');
      }
      return SubscriptionModel.defaultSubscription(userId);
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏–∑ –∫—ç—à–∞)
  SubscriptionModel? get currentSubscription => _cachedSubscription;

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞ —Å —É—á–µ—Ç–æ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
  bool get isPremium {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –ü–ï–†–í–´–ú
    if (_isTestAccount()) {
      return true;
    }

    // –û–±—ã—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞
    return _cachedSubscription?.isPremium ?? false;
  }

  /// –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  void dispose() {
    _purchaseSubscription?.cancel();
    _subscriptionController.close();
    _subscriptionStatusController.close();
  }
}
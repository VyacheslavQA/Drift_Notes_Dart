// –ü—É—Ç—å: lib/mixins/policy_enforcement_mixin.dart

import 'package:flutter/material.dart';
import '../services/user_consent_service.dart';
import '../services/firebase/firebase_service.dart';
import '../widgets/user_agreements_dialog.dart';
import '../localization/app_localizations.dart';
import '../constants/app_constants.dart';

/// ‚úÖ –£–ü–†–û–©–ï–ù–ù–´–ô –º–∏–∫—Å–∏–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≥–ª–∞—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/// –£–±—Ä–∞–Ω–∞ —Å–ª–æ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π - —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: —Å–æ–≥–ª–∞—Å–∏—è –ø—Ä–∏–Ω—è—Ç—ã –î–ê/–ù–ï–¢
mixin PolicyEnforcementMixin<T extends StatefulWidget> on State<T> {
  final UserConsentService _consentService = UserConsentService();
  final FirebaseService _firebaseService = FirebaseService();

  bool _consentsChecked = false;
  bool _consentsValid = false;

  /// ‚úÖ –£–ü–†–û–©–ï–ù–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≥–ª–∞—Å–∏–π –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  Future<void> checkPolicyCompliance() async {
    if (_consentsChecked) return; // –ò–∑–±–µ–≥–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫

    try {
      debugPrint('üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

      final consentResult = await _consentService.checkUserConsents();
      _consentsChecked = true;
      _consentsValid = consentResult.allValid;

      if (!consentResult.allValid) {
        debugPrint('üö´ –°–æ–≥–ª–∞—Å–∏—è –Ω–µ –ø—Ä–∏–Ω—è—Ç—ã –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥');
        await _showMandatoryPolicyDialog();
      } else {
        debugPrint('‚úÖ –í—Å–µ —Å–æ–≥–ª–∞—Å–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã');
      }
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–≥–ª–∞—Å–∏–π: $e');
      _consentsChecked = true;
      _consentsValid = false;
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      await _showMandatoryPolicyDialog();
    }
  }

  /// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø—Ä–∏–Ω—è—Ç–∏—è —Å–æ–≥–ª–∞—Å–∏–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
  Future<void> _showMandatoryPolicyDialog() async {
    if (!mounted) return;

    final bool? agreementsAccepted = await showDialog<bool>(
      context: context,
      barrierDismissible: false,
      builder: (BuildContext context) {
        return PopScope(
          canPop: false, // –ó–∞–ø—Ä–µ—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–≤–∞–π–ø–æ–º/–∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥
          child: UserAgreementsDialog(
            isRegistration: false, // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¥–æ–±–∞–≤–ª–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
            onAgreementsAccepted: () {
              debugPrint('‚úÖ –°–æ–≥–ª–∞—Å–∏—è –ø—Ä–∏–Ω—è—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
              Navigator.of(context).pop(true);
            },
            onCancel: () {
              debugPrint('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –ø—Ä–∏–Ω—è—Ç–∏—è —Å–æ–≥–ª–∞—Å–∏–π');
              Navigator.of(context).pop(false);
            },
          ),
        );
      },
    );

    // ‚úÖ –£–ü–†–û–©–ï–ù–ù–ê–Ø –ª–æ–≥–∏–∫–∞: –ø—Ä–∏–Ω—è–ª - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º, –æ—Ç–∫–∞–∑–∞–ª—Å—è - –≤—ã—Ö–æ–¥
    if (agreementsAccepted == true) {
      _consentsValid = true;
      if (mounted) setState(() {}); // –û–±–Ω–æ–≤–ª—è–µ–º UI
    } else {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è - –≤—ã—Ö–æ–¥–∏–º –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
      debugPrint('üö™ –í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–∑-–∑–∞ –æ—Ç–∫–∞–∑–∞ –æ—Ç —Å–æ–≥–ª–∞—Å–∏–π');
      await _firebaseService.signOut();

      if (mounted) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text(
              AppLocalizations.of(context)?.translate('consents_required') ??
                  '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—Å–∏—è',
            ),
            backgroundColor: Colors.red,
            duration: const Duration(seconds: 3),
          ),
        );

        // –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        // —á–µ—Ä–µ–∑ FirebaseAuth.authStateChanges –≤ main.dart
      }
    }
  }

  /// ‚úÖ –£–ü–†–û–©–ï–ù–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
  /// –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ: –ø—Ä–∏–Ω—è—Ç—ã –ª–∏ —Å–æ–≥–ª–∞—Å–∏—è
  bool canPerformAction(String action) {
    return _consentsValid;
  }

  /// ‚úÖ –£–ü–†–û–©–ï–ù–ù–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –¥–µ–π—Å—Ç–≤–∏—è
  void showActionBlockedMessage(String action) {
    if (!mounted) return;

    final localizations = AppLocalizations.of(context);

    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text(
          localizations?.translate('action_blocked_consents_required') ??
              '–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—Å–∏—è',
        ),
        backgroundColor: Colors.orange,
        action: SnackBarAction(
          label: localizations?.translate('accept_consents') ??
              '–ü—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—Å–∏—è',
          textColor: Colors.white,
          onPressed: () => _showMandatoryPolicyDialog(),
        ),
        duration: const Duration(seconds: 4),
      ),
    );
  }

  /// ‚úÖ –£–ü–†–û–©–ï–ù–ù–û–ï –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
  Future<bool> safePerformAction(
      String action,
      Future<void> Function() actionCallback,
      ) async {
    if (!canPerformAction(action)) {
      showActionBlockedMessage(action);
      return false;
    }

    try {
      await actionCallback();
      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è $action: $e');

      if (mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text(
              AppLocalizations.of(context)?.translate('action_failed') ??
                  '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
            ),
            backgroundColor: Colors.red,
            duration: const Duration(seconds: 3),
          ),
        );
      }

      return false;
    }
  }

  /// ‚úÖ –£–ü–†–û–©–ï–ù–ù–´–ô –≤–∏–¥–∂–µ—Ç —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–æ–≥–ª–∞—Å–∏–π
  Widget buildRestrictedWidget({
    required String action,
    required Widget child,
    Widget? restrictedChild,
  }) {
    if (!canPerformAction(action)) {
      return restrictedChild ?? _buildRestrictedPlaceholder(action);
    }
    return child;
  }

  /// ‚úÖ –£–ü–†–û–©–ï–ù–ù–ê–Ø –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  Widget _buildRestrictedPlaceholder(String action) {
    final localizations = AppLocalizations.of(context);

    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey[100],
        borderRadius: BorderRadius.circular(12),
        border: Border.all(color: Colors.orange, width: 2),
      ),
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Icon(
            Icons.privacy_tip_outlined,
            size: 48,
            color: Colors.orange[700],
          ),
          const SizedBox(height: 12),
          Text(
            localizations?.translate('content_requires_consents') ??
                '–ö–æ–Ω—Ç–µ–Ω—Ç —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∏–Ω—è—Ç–∏—è —Å–æ–≥–ª–∞—Å–∏–π',
            style: TextStyle(
              fontSize: 16,
              fontWeight: FontWeight.bold,
              color: Colors.orange[700],
            ),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 8),
          Text(
            localizations?.translate('accept_consents_to_unlock') ??
                '–ü—Ä–∏–º–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–≥–ª–∞—Å–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É',
            style: TextStyle(
              fontSize: 14,
              color: Colors.orange[600],
            ),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 16),
          ElevatedButton.icon(
            onPressed: () => _showMandatoryPolicyDialog(),
            style: ElevatedButton.styleFrom(
              backgroundColor: AppConstants.primaryColor,
              foregroundColor: Colors.white,
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(8),
              ),
            ),
            icon: const Icon(Icons.check_circle_outline, size: 20),
            label: Text(
              localizations?.translate('accept_consents') ??
                  '–ü—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—Å–∏—è',
            ),
          ),
        ],
      ),
    );
  }

  /// ‚úÖ –£–ü–†–û–©–ï–ù–ù–´–ï –≥–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è

  /// –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –ª–∏ —Å–æ–≥–ª–∞—Å–∏—è
  bool get consentsChecked => _consentsChecked;

  /// –í–∞–ª–∏–¥–Ω—ã –ª–∏ —Å–æ–≥–ª–∞—Å–∏—è
  bool get consentsValid => _consentsValid;

  /// –ú–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
  bool get canCreateContent => _consentsValid;

  /// –ú–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
  bool get canEditData => _consentsValid;

  /// –ú–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏
  bool get canUsePremiumFeatures => _consentsValid;

  /// ‚úÖ –ú–ï–¢–û–î –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≥–ª–∞—Å–∏–π
  Future<void> recheckConsents() async {
    _consentsChecked = false;
    _consentsValid = false;
    await checkPolicyCompliance();
  }

  /// ‚úÖ –ú–ï–¢–û–î –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ)
  void resetConsentsState() {
    _consentsChecked = false;
    _consentsValid = false;
  }
}
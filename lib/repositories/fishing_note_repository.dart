// –ü—É—Ç—å: lib/repositories/fishing_note_repository.dart

import 'dart:io';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/foundation.dart';
import 'package:uuid/uuid.dart';
import '../models/fishing_note_model.dart';
import '../services/firebase/firebase_service.dart';
import '../utils/network_utils.dart';
import '../services/offline/offline_storage_service.dart';
import '../services/offline/sync_service.dart';
import '../services/local/local_file_service.dart';
import '../services/subscription/subscription_service.dart';
import '../constants/subscription_constants.dart';

class FishingNoteRepository {
  final FirebaseService _firebaseService = FirebaseService();
  final OfflineStorageService _offlineStorage = OfflineStorageService();
  final SyncService _syncService = SyncService();
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  final LocalFileService _localFileService = LocalFileService();
  final SubscriptionService _subscriptionService = SubscriptionService();

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–º–µ—Ç–æ–∫
  Future<List<FishingNoteModel>> getUserFishingNotes() async {
    try {
      final userId = _firebaseService.currentUserId;
      if (userId == null || userId.isEmpty) {
        debugPrint('‚ö†Ô∏è getUserFishingNotes: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      debugPrint('üìù –ó–∞–ø—Ä–æ—Å –∑–∞–º–µ—Ç–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $userId');

      // –í–°–ï–ì–î–ê –ø–æ–ª—É—á–∞–µ–º –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏ –ü–ï–†–í–´–ú–ò
      final offlineNotes = await _getOfflineNotes(userId);
      debugPrint('üì± –û—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫ –Ω–∞–π–¥–µ–Ω–æ: ${offlineNotes.length}');

      // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º ID –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      for (var note in offlineNotes) {
        debugPrint('üì± –û—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∞: ${note.id} - ${note.location} (${note.date})');
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
      final isOnline = await NetworkUtils.isNetworkAvailable();
      debugPrint('üåê –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ç–∏: ${isOnline ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ–ª–∞–π–Ω'}');

      List<FishingNoteModel> onlineNotes = [];

      if (isOnline) {
        // === –û–ù–õ–ê–ô–ù –†–ï–ñ–ò–ú: –ó–∞–≥—Ä—É–∂–∞–µ–º –¢–û–õ–¨–ö–û –∏–∑ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã ===
        try {
          debugPrint('‚òÅÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–º–µ—Ç–∫–∏ –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: users/$userId/fishing_notes');

          final snapshot = await _firestore
              .collection('users')
              .doc(userId)
              .collection('fishing_notes')
              .get();

          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –º–æ–¥–µ–ª–∏
          for (var doc in snapshot.docs) {
            final data = doc.data();
            if (data.isNotEmpty) {
              final note = FishingNoteModel.fromJson(
                Map<String, dynamic>.from(data),
                id: doc.id,
              );
              onlineNotes.add(note);
              debugPrint('‚òÅÔ∏è –û–Ω–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∞: ${note.id} - ${note.location}');

              // üö® –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫—ç—à–∏—Ä—É–µ–º –æ–Ω–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è –æ—Ñ–ª–∞–π–Ω –¥–æ—Å—Ç—É–ø–∞
              try {
                final noteJson = note.toJson();
                noteJson['id'] = note.id;
                noteJson['isSynced'] = true; // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é
                noteJson['isOffline'] = false; // –≠—Ç–æ –Ω–µ —á–∏—Å—Ç–æ –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∞
                _offlineStorage.saveOfflineNote(noteJson).catchError((error) {
                  debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏ ${note.id}: $error');
                });
              } catch (cacheError) {
                debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏ ${note.id}: $cacheError');
                // –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
              }
            }
          }

          debugPrint('‚òÅÔ∏è –ó–∞–º–µ—Ç–æ–∫ –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: ${onlineNotes.length}');
        } catch (e) {
          debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–æ–∫ –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: $e');
          // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ - –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –∫—ç—à–∞
          onlineNotes = await _getCachedOnlineNotesFromNewStructure(userId);
        }
      } else {
        // === –û–§–õ–ê–ô–ù –†–ï–ñ–ò–ú: –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –∫—ç—à–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã ===
        debugPrint('üì± –û–§–õ–ê–ô–ù –†–ï–ñ–ò–ú: –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...');
        onlineNotes = await _getCachedOnlineNotesFromNewStructure(userId);
      }

      // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ø–∏—Å–∫–∏, –∏–∑–±–µ–≥–∞—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
      final Map<String, FishingNoteModel> uniqueNotes = {};

      // –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –æ–Ω–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏
      for (var note in onlineNotes) {
        uniqueNotes[note.id] = note;
        debugPrint('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–Ω–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∞: ${note.id}');
      }

      // –ó–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ–º –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –æ–Ω–ª–∞–π–Ω —Å–ø–∏—Å–∫–µ
      for (var note in offlineNotes) {
        if (!uniqueNotes.containsKey(note.id)) {
          uniqueNotes[note.id] = note;
          debugPrint('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∞: ${note.id}');
        } else {
          debugPrint('‚ö†Ô∏è –û—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∞ ${note.id} —É–∂–µ –µ—Å—Ç—å –≤ –æ–Ω–ª–∞–π–Ω —Å–ø–∏—Å–∫–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
        }
      }

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å–ø–∏—Å–æ–∫ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ
      final allNotes = uniqueNotes.values.toList()
        ..sort((a, b) => b.date.compareTo(a.date));

      debugPrint('üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
      debugPrint('üìä –û–Ω–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫: ${onlineNotes.length}');
      debugPrint('üìä –û—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫: ${offlineNotes.length}');
      debugPrint('üìä –í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫: ${allNotes.length}');

      // –í—ã–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      debugPrint('üìã –§–ò–ù–ê–õ–¨–ù–´–ô –°–ü–ò–°–û–ö –ó–ê–ú–ï–¢–û–ö:');
      for (int i = 0; i < allNotes.length; i++) {
        final note = allNotes[i];
        debugPrint('üìã ${i + 1}. ${note.id} - ${note.location} (${note.date})');
      }

      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–º–µ—Ç–æ–∫
      try {
        await _subscriptionService.refreshUsageLimits();
        debugPrint('‚úÖ –õ–∏–º–∏—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–º–µ—Ç–æ–∫');
      } catch (e) {
        debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤: $e');
      }

      // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –≤ —Ñ–æ–Ω–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–ª–∞–π–Ω
      if (isOnline) {
        _syncService.syncAll();
      }

      // –í–ê–ñ–ù–û: –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω –ø—É—Å—Ç–æ–π
      debugPrint('üéØ –í–æ–∑–≤—Ä–∞—â–∞–µ–º ${allNotes.length} –∑–∞–º–µ—Ç–æ–∫ –≤ UI');
      return allNotes;
    } catch (e) {
      debugPrint('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ getUserFishingNotes: $e');

      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –ø—ã—Ç–∞–µ–º—Å—è –≤–µ—Ä–Ω—É—Ç—å —Ö–æ—Ç—è –±—ã –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏
      try {
        final userId = _firebaseService.currentUserId ?? '';
        debugPrint('üîÑ –ê–≤–∞—Ä–∏–π–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫ –¥–ª—è: $userId');
        final emergencyNotes = await _getOfflineNotes(userId);
        debugPrint('üÜò –ê–≤–∞—Ä–∏–π–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ ${emergencyNotes.length} –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫');
        return emergencyNotes;
      } catch (innerError) {
        debugPrint('üí• –ü–û–õ–ù–´–ô –ü–†–û–í–ê–õ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–æ–∫: $innerError');
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –≤–º–µ—Å—Ç–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, —á—Ç–æ–±—ã UI –Ω–µ —Å–ª–æ–º–∞–ª—Å—è
        return [];
      }
    }
  }

  // üî• –£–õ–£–ß–®–ï–ù–û: –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫
  Future<List<FishingNoteModel>> _getCachedOnlineNotesFromNewStructure(String userId) async {
    try {
      debugPrint('üíæ –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...');

      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∑–∞–º–µ—Ç–∫–∏ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∞ Firestore (–Ω–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
      final snapshot = await _firestore
          .collection('users')
          .doc(userId)
          .collection('fishing_notes')
          .get(const GetOptions(source: Source.cache)); // –ü–æ–ª—É—á–∞–µ–º –∏–∑ –∫—ç—à–∞

      final List<FishingNoteModel> cachedNotes = [];

      for (var doc in snapshot.docs) {
        final data = doc.data();
        if (data.isNotEmpty) {
          try {
            final note = FishingNoteModel.fromJson(
              Map<String, dynamic>.from(data),
              id: doc.id,
            );
            cachedNotes.add(note);
            debugPrint('üíæ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞: ${note.id} - ${note.location}');
          } catch (e) {
            debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏ ${doc.id}: $e');
          }
        }
      }

      debugPrint('üíæ –í—Å–µ–≥–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫ –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: ${cachedNotes.length}');
      return cachedNotes;
    } catch (e) {
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫ –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: $e');

      // –ï—Å–ª–∏ –∏ –∫—ç—à –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –≤ –æ—Ñ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
      return await _getSavedOnlineNotesFromOfflineStorage(userId);
    }
  }

  // –£–õ–£–ß–®–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–Ω–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫ –∏–∑ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
  Future<List<FishingNoteModel>> _getSavedOnlineNotesFromOfflineStorage(String userId) async {
    try {
      debugPrint('üîç –ò—â–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ–Ω–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏ –≤ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ...');

      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
      final allOfflineNotes = await _offlineStorage.getAllOfflineNotes();
      final List<FishingNoteModel> savedOnlineNotes = [];

      for (var noteData in allOfflineNotes) {
        try {
          final noteUserId = noteData['userId']?.toString() ?? '';
          final isSynced = noteData['isSynced'] ?? true; // –ï—Å–ª–∏ –ø–æ–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å—á–∏—Ç–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π
          final isOfflineOnly = noteData['isOffline'] ?? false;

          // –ë–µ—Ä–µ–º –∑–∞–º–µ—Ç–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã (–Ω–µ —á–∏—Å—Ç–æ –æ—Ñ–ª–∞–π–Ω)
          if (noteUserId == userId && (isSynced || !isOfflineOnly)) {
            final noteId = noteData['id']?.toString() ?? '';
            if (noteId.isNotEmpty) {
              final note = FishingNoteModel.fromJson(noteData, id: noteId);
              savedOnlineNotes.add(note);
              debugPrint('üíæ –ù–∞–π–¥–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –æ–Ω–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∞: ${note.id} - ${note.location}');
            }
          }
        } catch (e) {
          debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏: $e');
        }
      }

      debugPrint('üíæ –í—Å–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–Ω–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫: ${savedOnlineNotes.length}');
      return savedOnlineNotes;
    } catch (e) {
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–Ω–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫: $e');
      return [];
    }
  }

  // üî• –ó–ù–ê–ß–ò–¢–ï–õ–¨–ù–û –£–õ–£–ß–®–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π
  Future<List<FishingNoteModel>> _getOfflineNotes(String userId) async {
    try {
      debugPrint('üì± === –ù–ê–ß–ê–õ–û –ü–û–õ–£–ß–ï–ù–ò–Ø –û–§–õ–ê–ô–ù –ó–ê–ú–ï–¢–û–ö ===');
      debugPrint('üì± –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π userId: $userId');

      final offlineNotes = await _offlineStorage.getAllOfflineNotes();
      debugPrint('üì± –í—Å–µ–≥–æ –∑–∞–º–µ—Ç–æ–∫ –≤ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ: ${offlineNotes.length}');

      final List<FishingNoteModel> result = [];
      int processedCount = 0;
      int skippedCount = 0;
      int errorCount = 0;

      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –∑–∞–º–µ—Ç–∫—É –æ—Ç–¥–µ–ª—å–Ω–æ
      for (int index = 0; index < offlineNotes.length; index++) {
        try {
          final note = offlineNotes[index];
          processedCount++;

          final noteId = note['id']?.toString() ?? '';
          final noteUserId = note['userId']?.toString() ?? '';
          final isOffline = note['isOffline'] ?? false;
          final location = note['location']?.toString() ?? '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';

          debugPrint('üì± –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–º–µ—Ç–∫—É $processedCount/${ offlineNotes.length}:');
          debugPrint('   ID: $noteId');
          debugPrint('   UserId: $noteUserId');
          debugPrint('   IsOffline: $isOffline');
          debugPrint('   Location: $location');

          if (noteId.isEmpty) {
            debugPrint('   ‚ùå –ü—Ä–æ–ø—É—Å–∫–∞–µ–º - –Ω–µ—Ç ID');
            skippedCount++;
            continue;
          }

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
          bool belongsToUser = false;

          if (noteUserId.isNotEmpty && noteUserId == userId) {
            belongsToUser = true;
            debugPrint('   ‚úÖ –ó–∞–º–µ—Ç–∫–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');
          } else if (noteUserId.isEmpty) {
            // –ó–∞–º–µ—Ç–∫–∞ –±–µ–∑ userId - –¥–æ–±–∞–≤–ª—è–µ–º userId –∏ —Å—á–∏—Ç–∞–µ–º –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–µ–π —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            debugPrint('   üîß –ó–∞–º–µ—Ç–∫–∞ –±–µ–∑ userId, –¥–æ–±–∞–≤–ª—è–µ–º: $userId');
            note['userId'] = userId;
            belongsToUser = true;

            // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∑–∞–º–µ—Ç–∫—É
            _offlineStorage.saveOfflineNote(note).catchError((error) {
              debugPrint('   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏: $error');
            });
          } else {
            debugPrint('   ‚ùå –ó–∞–º–µ—Ç–∫–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: $noteUserId');
            skippedCount++;
          }

          if (belongsToUser) {
            try {
              final noteModel = FishingNoteModel.fromJson(note, id: noteId);
              result.add(noteModel);
              debugPrint('   ‚úÖ –ó–∞–º–µ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç');
            } catch (e) {
              debugPrint('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ –º–æ–¥–µ–ª—å: $e');
              errorCount++;
            }
          }

        } catch (e) {
          debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–º–µ—Ç–∫–∏ $processedCount: $e');
          errorCount++;
          continue;
        }
      }

      debugPrint('üì± === –ò–¢–û–ì–ò –û–ë–†–ê–ë–û–¢–ö–ò –û–§–õ–ê–ô–ù –ó–ê–ú–ï–¢–û–ö ===');
      debugPrint('üì± –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: $processedCount');
      debugPrint('üì± –ü—Ä–æ–ø—É—â–µ–Ω–æ: $skippedCount');
      debugPrint('üì± –û—à–∏–±–æ–∫: $errorCount');
      debugPrint('üì± –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${result.length}');

      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ
      result.sort((a, b) => b.date.compareTo(a.date));

      debugPrint('üì± === –§–ò–ù–ê–õ–¨–ù–´–ô –°–ü–ò–°–û–ö –û–§–õ–ê–ô–ù –ó–ê–ú–ï–¢–û–ö ===');
      for (int i = 0; i < result.length; i++) {
        final note = result[i];
        debugPrint('üì± ${i + 1}. ${note.id} - ${note.location} (${note.date})');
      }

      return result;
    } catch (e) {
      debugPrint('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫: $e');
      return [];
    }
  }

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏ –¢–û–õ–¨–ö–û –≤ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
  Future<String> addFishingNote(
      FishingNoteModel note,
      List<File>? photos,
      ) async {
    try {
      final userId = _firebaseService.currentUserId;
      if (userId == null || userId.isEmpty) {
        debugPrint('‚ö†Ô∏è addFishingNote: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      final noteId = note.id.isEmpty ? const Uuid().v4() : note.id;
      debugPrint('üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ —Å ID: $noteId –≤ –ù–û–í–£–Æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É');

      // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –∑–∞–º–µ—Ç–∫–∏ —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º ID –∏ UserID
      final noteToAdd = note.copyWith(id: noteId, userId: userId);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
      final isOnline = await NetworkUtils.isNetworkAvailable();
      debugPrint('üåê –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ç–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏: ${isOnline ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ–ª–∞–π–Ω'}');

      if (isOnline) {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–º–µ—Ç–∫—É –≤ –ù–û–í–£–Æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        List<String> photoUrls = [];

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –∏ –ø–æ–ª—É—á–∞–µ–º URL
        if (photos != null && photos.isNotEmpty) {
          debugPrint('üñºÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ ${photos.length} —Ñ–æ—Ç–æ');
          for (var photo in photos) {
            try {
              final bytes = await photo.readAsBytes();
              final fileName = '${DateTime.now().millisecondsSinceEpoch}_${photos.indexOf(photo)}.jpg';
              final path = 'users/$userId/photos/$fileName';
              final url = await _firebaseService.uploadImage(path, bytes);
              photoUrls.add(url);
              debugPrint('üñºÔ∏è –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: $url');
            } catch (e) {
              debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ: $e');
            }
          }
        }

        // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –∑–∞–º–µ—Ç–∫–∏ —Å URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        final noteWithPhotos = noteToAdd.copyWith(photoUrls: photoUrls);

        // üî• –î–û–ë–ê–í–õ–Ø–ï–ú –í –ù–û–í–£–Æ –°–¢–†–£–ö–¢–£–†–£: users/$userId/fishing_notes
        try {
          await _firestore
              .collection('users')
              .doc(userId)
              .collection('fishing_notes')
              .doc(noteId)
              .set(noteWithPhotos.toJson());

          debugPrint('‚úÖ –ó–∞–º–µ—Ç–∫–∞ $noteId –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ù–û–í–£–Æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É: users/$userId/fishing_notes');

          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é –≤ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∫–∞–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é
          final noteJson = noteWithPhotos.toJson();
          noteJson['id'] = noteId;
          noteJson['isSynced'] = true; // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é
          noteJson['isOffline'] = false; // –≠—Ç–æ –Ω–µ —á–∏—Å—Ç–æ –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∞
          await _offlineStorage.saveOfflineNote(noteJson);
          debugPrint('üíæ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∫—ç—à–µ');

          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –ª–∏–º–∏—Ç–æ–≤ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
          try {
            if (!_subscriptionService.hasPremiumAccess()) {
              await _subscriptionService.incrementUsage(ContentType.fishingNotes);
              debugPrint('‚úÖ –°—á–µ—Ç—á–∏–∫ –ª–∏–º–∏—Ç–æ–≤ —É–≤–µ–ª–∏—á–µ–Ω –¥–ª—è –∑–∞–º–µ—Ç–æ–∫');
            }

            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–∏–º–∏—Ç—ã
            await _subscriptionService.refreshUsageLimits();
            debugPrint('‚úÖ –õ–∏–º–∏—Ç—ã –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
          } catch (e) {
            debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤: $e');
          }

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
          _syncService.syncAll();

          return noteId;
        } catch (e) {
          debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏ –≤ –ù–û–í–£–Æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É: $e');

          // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–º–µ—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω–æ
          await _saveOfflineNote(noteWithPhotos, photos);

          // –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–º–∏—Ç—ã –¥–∞–∂–µ –¥–ª—è –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫
          try {
            if (!_subscriptionService.hasPremiumAccess()) {
              await _subscriptionService.incrementUsage(ContentType.fishingNotes);
              debugPrint('‚úÖ –°—á–µ—Ç—á–∏–∫ –ª–∏–º–∏—Ç–æ–≤ —É–≤–µ–ª–∏—á–µ–Ω –¥–ª—è –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏');
            }
          } catch (limitError) {
            debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ –¥–ª—è –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏: $limitError');
          }

          return noteId;
        }
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, —Å–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ–ø–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ URI
        List<String> localPhotoUris = [];
        if (photos != null && photos.isNotEmpty) {
          debugPrint('üì± –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∫–æ–ø–∏–π ${photos.length} —Ñ–æ—Ç–æ');
          localPhotoUris = await _localFileService.saveLocalCopies(photos);
          debugPrint('üì± –°–æ–∑–¥–∞–Ω–æ ${localPhotoUris.length} –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∫–æ–ø–∏–π —Ñ–æ—Ç–æ');
        }

        // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –∑–∞–º–µ—Ç–∫–∏ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ URI —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        final noteWithLocalPhotos = noteToAdd.copyWith(photoUrls: localPhotoUris);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–º–µ—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω–æ
        debugPrint('üì± –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ');
        await _saveOfflineNote(noteWithLocalPhotos, photos);

        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–º–∏—Ç—ã –¥–ª—è –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫
        try {
          if (!_subscriptionService.hasPremiumAccess()) {
            await _subscriptionService.incrementUsage(ContentType.fishingNotes);
            debugPrint('‚úÖ –°—á–µ—Ç—á–∏–∫ –ª–∏–º–∏—Ç–æ–≤ —É–≤–µ–ª–∏—á–µ–Ω –¥–ª—è –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏');
          }
        } catch (e) {
          debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ –¥–ª—è –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏: $e');
        }

        return noteId;
      }
    } catch (e) {
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏: $e');
      rethrow;
    }
  }

  // üî• –£–õ–£–ß–®–ï–ù–û: –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏
  Future<void> _saveOfflineNote(
      FishingNoteModel note,
      List<File>? photos,
      ) async {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –∑–∞–º–µ—Ç–∫–∏ –µ—Å—Ç—å ID
      if (note.id.isEmpty) {
        debugPrint('‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É –±–µ–∑ ID!');
        throw Exception('ID –∑–∞–º–µ—Ç–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
      }

      debugPrint('üì± === –°–û–•–†–ê–ù–ï–ù–ò–ï –û–§–õ–ê–ô–ù –ó–ê–ú–ï–¢–ö–ò ===');
      debugPrint('üì± ID: ${note.id}');
      debugPrint('üì± Location: ${note.location}');
      debugPrint('üì± UserId: ${note.userId}');

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–º–µ—Ç–∫—É
      final noteJson = note.toJson();
      noteJson['id'] = note.id; // –Ø–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º ID –≤ JSON
      noteJson['isSynced'] = false; // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é
      noteJson['isOffline'] = true; // –≠—Ç–æ —á–∏—Å—Ç–æ –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∞

      debugPrint('üì± –°–æ—Ö—Ä–∞–Ω—è–µ–º JSON: $noteJson');
      await _offlineStorage.saveOfflineNote(noteJson);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç–∏ –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º
      if (photos != null && photos.isNotEmpty) {
        final photoPaths = photos.map((file) => file.path).toList();
        await _offlineStorage.saveOfflinePhotoPaths(note.id, photoPaths);
        debugPrint('üì± –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${photoPaths.length} –ø—É—Ç–µ–π –∫ —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–º–µ—Ç–∫–∏ ${note.id}');
      }

      debugPrint('‚úÖ –ó–∞–º–µ—Ç–∫–∞ ${note.id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ');

      // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –∑–∞–º–µ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞—Å—å
      try {
        final savedNotes = await _offlineStorage.getAllOfflineNotes();
        final savedNote = savedNotes.where((n) => n['id'] == note.id).firstOrNull;
        if (savedNote != null) {
          debugPrint('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ: –∑–∞–º–µ—Ç–∫–∞ ${note.id} –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ');
        } else {
          debugPrint('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –∑–∞–º–µ—Ç–∫–∞ ${note.id} –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è!');
        }
      } catch (e) {
        debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: $e');
      }
    } catch (e) {
      debugPrint('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏ –æ—Ñ–ª–∞–π–Ω: $e');
      rethrow;
    }
  }

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –¢–û–õ–¨–ö–û –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
  Future<void> updateFishingNote(FishingNoteModel note) async {
    try {
      final userId = _firebaseService.currentUserId;
      if (userId == null || userId.isEmpty) {
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      if (note.id.isEmpty) {
        debugPrint('‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É –±–µ–∑ ID!');
        throw Exception('ID –∑–∞–º–µ—Ç–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
      }

      debugPrint('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏: ${note.id} –≤ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä–µ');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
      final isOnline = await NetworkUtils.isNetworkAvailable();
      debugPrint('üåê –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ç–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: ${isOnline ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ–ª–∞–π–Ω'}');

      // –í—Å–µ–≥–¥–∞ —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–º–µ—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω–æ
      final noteJson = note.toJson();
      noteJson['id'] = note.id;
      await _offlineStorage.saveOfflineNote(noteJson);
      debugPrint('üì± –ó–∞–º–µ—Ç–∫–∞ ${note.id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ');

      if (isOnline) {
        // üî• –û–ë–ù–û–í–õ–Ø–ï–ú –í –ù–û–í–û–ô –°–¢–†–£–ö–¢–£–†–ï: users/$userId/fishing_notes
        try {
          await _firestore
              .collection('users')
              .doc(userId)
              .collection('fishing_notes')
              .doc(note.id)
              .update(note.toJson());

          debugPrint('‚úÖ –ó–∞–º–µ—Ç–∫–∞ ${note.id} –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä–µ: users/$userId/fishing_notes');
        } catch (e) {
          debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏ –≤ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä–µ: $e');
        }
      }
    } catch (e) {
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏: $e');

      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –ø—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω–æ
      try {
        final noteJson = note.toJson();
        noteJson['id'] = note.id;
        await _offlineStorage.saveOfflineNote(noteJson);
        debugPrint('üì± –ó–∞–º–µ—Ç–∫–∞ ${note.id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ (–ø–æ—Å–ª–µ –æ–±—â–µ–π –æ—à–∏–±–∫–∏)');
      } catch (innerError) {
        debugPrint('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: $innerError');
        rethrow;
      }
    }
  }

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ ID –¢–û–õ–¨–ö–û –∏–∑ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
  Future<FishingNoteModel> getFishingNoteById(String noteId) async {
    try {
      final userId = _firebaseService.currentUserId;
      if (userId == null || userId.isEmpty) {
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      if (noteId.isEmpty) {
        throw Exception('ID –∑–∞–º–µ—Ç–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
      }

      debugPrint('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ ID: $noteId –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
      final isOnline = await NetworkUtils.isNetworkAvailable();
      debugPrint('üåê –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ç–∏: ${isOnline ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ–ª–∞–π–Ω'}');

      if (isOnline) {
        // üî• –ü–û–õ–£–ß–ê–ï–ú –ò–ó –ù–û–í–û–ô –°–¢–†–£–ö–¢–£–†–´: users/$userId/fishing_notes
        try {
          final doc = await _firestore
              .collection('users')
              .doc(userId)
              .collection('fishing_notes')
              .doc(noteId)
              .get();

          if (doc.exists) {
            // –ü–æ–ª—É—á–∞–µ–º –∑–∞–º–µ—Ç–∫—É –∏–∑ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            final note = FishingNoteModel.fromJson(
              doc.data() as Map<String, dynamic>,
              id: doc.id,
            );
            debugPrint('‚úÖ –ó–∞–º–µ—Ç–∫–∞ $noteId –ø–æ–ª—É—á–µ–Ω–∞ –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã');

            // üö® –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é –≤ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
            try {
              final noteJson = note.toJson();
              noteJson['id'] = note.id;
              noteJson['isSynced'] = true; // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é
              noteJson['isOffline'] = false; // –≠—Ç–æ –Ω–µ —á–∏—Å—Ç–æ –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∞
              await _offlineStorage.saveOfflineNote(noteJson);
              debugPrint('üíæ –û–Ω–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∞ $noteId –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∞ –≤ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –±—É–¥—É—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞');
            } catch (cacheError) {
              debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏: $cacheError');
              // –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ - –∑–∞–º–µ—Ç–∫—É –≤—Å—ë —Ä–∞–≤–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º
            }

            return note;
          } else {
            debugPrint('‚ö†Ô∏è –ó–∞–º–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä–µ, –∏—â–µ–º –≤ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ');
          }
        } catch (e) {
          debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏ –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: $e');
        }
      } else {
        debugPrint('üì± –û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º: –∏—â–µ–º –∑–∞–º–µ—Ç–∫—É $noteId –≤ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ');
      }

      // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –æ–Ω–ª–∞–π–Ω –∏–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –∏—â–µ–º –≤ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
      return await _getOfflineNoteById(noteId);
    } catch (e) {
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏ –ø–æ ID: $e');

      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∑–∞–º–µ—Ç–∫—É –∏–∑ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
      try {
        debugPrint('üîÑ –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∑–∞–º–µ—Ç–∫—É $noteId –∏–∑ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–∞');
        return await _getOfflineNoteById(noteId);
      } catch (innerError) {
        debugPrint('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–∫–∏: $innerError');
        rethrow;
      }
    }
  }

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –¢–û–õ–¨–ö–û –∏–∑ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
  Future<void> deleteFishingNote(String noteId) async {
    try {
      final userId = _firebaseService.currentUserId;
      if (userId == null || userId.isEmpty) {
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      if (noteId.isEmpty) {
        throw Exception('ID –∑–∞–º–µ—Ç–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
      }

      debugPrint('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏: $noteId –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
      final isOnline = await NetworkUtils.isNetworkAvailable();
      debugPrint('üåê –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ç–∏: ${isOnline ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ–ª–∞–π–Ω'}');

      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      FishingNoteModel? note;
      try {
        note = await _getOfflineNoteById(noteId);
      } catch (e) {
        debugPrint('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: $e');
      }

      // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
      if (note != null && note.photoUrls.isNotEmpty) {
        for (var url in note.photoUrls) {
          if (_localFileService.isLocalFileUri(url)) {
            await _localFileService.deleteLocalFile(url);
            debugPrint('üóëÔ∏è –£–¥–∞–ª–µ–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª: $url');
          }
        }
      }

      if (isOnline) {
        // üî• –£–î–ê–õ–Ø–ï–ú –ò–ó –ù–û–í–û–ô –°–¢–†–£–ö–¢–£–†–´: users/$userId/fishing_notes
        try {
          await _firestore
              .collection('users')
              .doc(userId)
              .collection('fishing_notes')
              .doc(noteId)
              .delete();

          debugPrint('‚úÖ –ó–∞–º–µ—Ç–∫–∞ $noteId —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: users/$userId/fishing_notes');

          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –ª–∏–º–∏—Ç–æ–≤ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
          try {
            if (!_subscriptionService.hasPremiumAccess()) {
              await _subscriptionService.decrementUsage(ContentType.fishingNotes);
              debugPrint('‚úÖ –°—á–µ—Ç—á–∏–∫ –ª–∏–º–∏—Ç–æ–≤ —É–º–µ–Ω—å—à–µ–Ω –¥–ª—è –∑–∞–º–µ—Ç–æ–∫');
            }

            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–∏–º–∏—Ç—ã
            await _subscriptionService.refreshUsageLimits();
            debugPrint('‚úÖ –õ–∏–º–∏—Ç—ã –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è');
          } catch (e) {
            debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: $e');
          }

          // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é
          try {
            await _offlineStorage.removeOfflineNote(noteId);
            debugPrint('üì± –õ–æ–∫–∞–ª—å–Ω–∞—è –∫–æ–ø–∏—è –∑–∞–º–µ—Ç–∫–∏ $noteId —É–¥–∞–ª–µ–Ω–∞');
          } catch (e) {
            debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–ø–∏–∏ –∑–∞–º–µ—Ç–∫–∏: $e');
          }
        } catch (e) {
          debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏ –∏–∑ –ù–û–í–û–ô —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: $e');

          // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã, –æ—Ç–º–µ—á–∞–µ–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
          await _offlineStorage.markForDeletion(noteId, false);
          debugPrint('üì± –ó–∞–º–µ—Ç–∫–∞ $noteId –æ—Ç–º–µ—á–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');

          // –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–º–∏—Ç—ã –¥–∞–∂–µ –µ—Å–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ω–µ —É–¥–∞–ª–æ—Å—å
          try {
            if (!_subscriptionService.hasPremiumAccess()) {
              await _subscriptionService.decrementUsage(ContentType.fishingNotes);
              debugPrint('‚úÖ –°—á–µ—Ç—á–∏–∫ –ª–∏–º–∏—Ç–æ–≤ —É–º–µ–Ω—å—à–µ–Ω (–æ—Ñ–ª–∞–π–Ω —É–¥–∞–ª–µ–Ω–∏–µ)');
            }
          } catch (limitError) {
            debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ –ø—Ä–∏ –æ—Ñ–ª–∞–π–Ω —É–¥–∞–ª–µ–Ω–∏–∏: $limitError');
          }

          // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é
          try {
            await _offlineStorage.removeOfflineNote(noteId);
            debugPrint('üì± –õ–æ–∫–∞–ª—å–Ω–∞—è –∫–æ–ø–∏—è –∑–∞–º–µ—Ç–∫–∏ $noteId —É–¥–∞–ª–µ–Ω–∞');
          } catch (e) {
            debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–ø–∏–∏ –∑–∞–º–µ—Ç–∫–∏: $e');
          }
        }
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –æ—Ç–º–µ—á–∞–µ–º –∑–∞–º–µ—Ç–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        await _offlineStorage.markForDeletion(noteId, false);
        debugPrint('üì± –ó–∞–º–µ—Ç–∫–∞ $noteId –æ—Ç–º–µ—á–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–æ—Ñ–ª–∞–π–Ω)');

        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–º–∏—Ç—ã –ø—Ä–∏ –æ—Ñ–ª–∞–π–Ω —É–¥–∞–ª–µ–Ω–∏–∏
        try {
          if (!_subscriptionService.hasPremiumAccess()) {
            await _subscriptionService.decrementUsage(ContentType.fishingNotes);
            debugPrint('‚úÖ –°—á–µ—Ç—á–∏–∫ –ª–∏–º–∏—Ç–æ–≤ —É–º–µ–Ω—å—à–µ–Ω (–ø–æ–ª–Ω—ã–π –æ—Ñ–ª–∞–π–Ω)');
          }
        } catch (e) {
          debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º –æ—Ñ–ª–∞–π–Ω —É–¥–∞–ª–µ–Ω–∏–∏: $e');
        }

        // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é
        try {
          await _offlineStorage.removeOfflineNote(noteId);
          debugPrint('üì± –õ–æ–∫–∞–ª—å–Ω–∞—è –∫–æ–ø–∏—è –∑–∞–º–µ—Ç–∫–∏ $noteId —É–¥–∞–ª–µ–Ω–∞');
        } catch (e) {
          debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–ø–∏–∏ –∑–∞–º–µ—Ç–∫–∏: $e');
        }
      }
    } catch (e) {
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏: $e');

      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –æ—Ç–º–µ—á–∞–µ–º –∑–∞–º–µ—Ç–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
      try {
        await _offlineStorage.markForDeletion(noteId, false);
        debugPrint('üì± –ó–∞–º–µ—Ç–∫–∞ $noteId –æ—Ç–º–µ—á–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏)');
      } catch (_) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Ç–æ—Ä–∏—á–Ω—É—é –æ—à–∏–±–∫—É
      }
      rethrow;
    }
  }

  // üî• –£–õ–£–ß–®–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –∏–∑ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø–æ ID
  Future<FishingNoteModel> _getOfflineNoteById(String noteId) async {
    try {
      debugPrint('üì± === –ü–û–ò–°–ö –û–§–õ–ê–ô–ù –ó–ê–ú–ï–¢–ö–ò –ü–û ID ===');
      debugPrint('üì± –ò—â–µ–º –∑–∞–º–µ—Ç–∫—É —Å ID: $noteId');

      final allOfflineNotes = await _offlineStorage.getAllOfflineNotes();
      debugPrint('üì± –í—Å–µ–≥–æ –æ—Ñ–ª–∞–π–Ω –∑–∞–º–µ—Ç–æ–∫ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ: ${allOfflineNotes.length}');

      // –ò—â–µ–º –∑–∞–º–µ—Ç–∫—É –ø–æ ID
      final noteDataList = allOfflineNotes.where((note) => note['id'] == noteId).toList();

      if (noteDataList.isEmpty) {
        debugPrint('‚ùå –ó–∞–º–µ—Ç–∫–∞ $noteId –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ');

        // –í—ã–≤–æ–¥–∏–º –≤—Å–µ ID –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        debugPrint('üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ ID –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:');
        for (var note in allOfflineNotes) {
          final id = note['id']?.toString() ?? '–ù–ï–¢ ID';
          final location = note['location']?.toString() ?? '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
          debugPrint('   - $id ($location)');
        }

        throw Exception('–ó–∞–º–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ');
      }

      // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –∑–∞–º–µ—Ç–∫—É
      final noteData = noteDataList.first;
      debugPrint('‚úÖ –ó–∞–º–µ—Ç–∫–∞ $noteId –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–µ');
      debugPrint('üì± –î–∞–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏: ${noteData['location']} (${noteData['date']})');

      return FishingNoteModel.fromJson(noteData, id: noteId);
    } catch (e) {
      debugPrint('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏ –∏–∑ –æ—Ñ–ª–∞–π–Ω —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: $e');
      rethrow;
    }
  }

  // –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏...
  Future<FishingNoteModel> updateFishingNoteWithPhotos(
      FishingNoteModel note,
      List<File> newPhotos,
      ) async {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏ —Å —Ñ–æ—Ç–æ...
    // [–ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å, –Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø—É—Ç–∏ –∫ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ]
    throw UnimplementedError('–ú–µ—Ç–æ–¥ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏');
  }

  Future<void> _saveOfflineNoteUpdate(
      FishingNoteModel note,
      List<File> newPhotos,
      ) async {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...
    throw UnimplementedError('–ú–µ—Ç–æ–¥ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏');
  }

  Future<void> saveOfflineNoteUpdate(
      FishingNoteModel note,
      List<File> newPhotos,
      ) async {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...
    throw UnimplementedError('–ú–µ—Ç–æ–¥ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏');
  }

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  Future<void> syncOfflineDataOnStartup() async {
    try {
      debugPrint('üîÑ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
      await _syncService.syncAll();
      debugPrint('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } catch (e) {
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: $e');
    }
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
  Future<bool> forceSyncData() async {
    try {
      debugPrint('üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
      final result = await _syncService.forceSyncAll();
      debugPrint('‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${result ? '—É—Å–ø–µ—à–Ω–æ' : '–µ—Å—Ç—å –æ—à–∏–±–∫–∏'}');
      return result;
    } catch (e) {
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: $e');
      return false;
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  Future<Map<String, dynamic>> getSyncStatus() async {
    try {
      return await _syncService.getSyncStatus();
    } catch (e) {
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: $e');
      return {'error': e.toString()};
    }
  }

  // –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  Future<void> clearLocalFilesCache() async {
    try {
      await _localFileService.clearCache();
      debugPrint('‚úÖ –ö—ç—à –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –æ—á–∏—â–µ–Ω');
    } catch (e) {
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $e');
      rethrow;
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –∫—ç—à–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  Future<int> getLocalFilesCacheSize() async {
    try {
      return await _localFileService.getCacheSize();
    } catch (e) {
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –∫—ç—à–∞: $e');
      return 0;
    }
  }
}
// –ü—É—Ç—å: lib/repositories/user_repository.dart

import 'dart:async';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:flutter/foundation.dart';
import '../models/user_model.dart';
import '../services/user_consent_service.dart';
import '../services/firebase/firebase_service.dart';
import '../services/isar_service.dart';
import '../utils/network_utils.dart';

class UserRepository {
  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
  final FirebaseAuth _auth = FirebaseAuth.instance;
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  final UserConsentService _consentService = UserConsentService();
  final FirebaseService _firebaseService = FirebaseService();

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  User? get currentUser => _auth.currentUser;

  // –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  String? get currentUserId => _firebaseService.currentUserId; // –ò—Å–ø–æ–ª—å–∑—É–µ–º FirebaseService –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ñ–ª–∞–π–Ω

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  bool get isUserLoggedIn => _firebaseService.isUserLoggedIn; // –ò—Å–ø–æ–ª—å–∑—É–µ–º FirebaseService –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ñ–ª–∞–π–Ω

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞
  Future<UserModel?> getUserData(String userId) async {
    try {
      debugPrint('üë§ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $userId');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
      final isOnline = await NetworkUtils.isNetworkAvailable();

      if (isOnline) {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Firestore
        final doc = await _firestore.collection('users').doc(userId).get();

        if (!doc.exists) {
          debugPrint('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Firestore: $userId');
          return null;
        }

        final userData = UserModel.fromJson(doc.data() as Map<String, dynamic>);
        debugPrint('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ Firestore');

        return userData;
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞
        debugPrint('üì± –û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º: –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫—ç—à–∞');

        try {
          final doc = await _firestore
              .collection('users')
              .doc(userId)
              .get(const GetOptions(source: Source.cache));

          if (doc.exists) {
            debugPrint('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ –∫—ç—à–∞');
            return UserModel.fromJson(doc.data() as Map<String, dynamic>);
          }
        } catch (e) {
          debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑ –∫—ç—à–∞: $e');
        }

        debugPrint('‚ùå –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ');
        return null;
      }
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $e');
      return null;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<UserModel?> getCurrentUserData() async {
    final userId = currentUserId;
    if (userId == null) {
      debugPrint('‚ö†Ô∏è getCurrentUserData: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return null;
    }

    return getUserData(userId);
  }

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –°—Ç—Ä–∏–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
  Stream<UserModel?> getUserStream() {
    final userId = currentUserId;
    if (userId == null) {
      debugPrint('‚ö†Ô∏è getUserStream: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return Stream.value(null);
    }

    debugPrint('üì° –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∏–º–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $userId');

    return _firestore
        .collection('users')
        .doc(userId)
        .snapshots()
        .map((snapshot) {
      try {
        if (!snapshot.exists) {
          debugPrint('‚ö†Ô∏è –î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $userId');
          return null;
        }

        final data = snapshot.data();
        if (data == null) {
          debugPrint('‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è null: $userId');
          return null;
        }

        debugPrint('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —Å—Ç—Ä–∏–º');
        return UserModel.fromJson(data);
      } catch (e) {
        debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç—Ä–∏–º–µ: $e');
        return null;
      }
    }).handleError((error) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–∏–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $error');
      return null;
    });
  }

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ—Ñ–ª–∞–π–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
  Future<void> updateUserData(Map<String, dynamic> userData) async {
    try {
      final userId = currentUserId;
      if (userId == null) {
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      debugPrint('üë§ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $userId');
      debugPrint('üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: $userData');

      // –î–æ–±–∞–≤–ª—è–µ–º timestamp –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      final dataToUpdate = {
        ...userData,
        'updatedAt': FieldValue.serverTimestamp(),
      };

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
      final isOnline = await NetworkUtils.isNetworkAvailable();

      if (isOnline) {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Firestore
        await _firestore
            .collection('users')
            .doc(userId)
            .set(dataToUpdate, SetOptions(merge: true));

        debugPrint('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ Firestore');
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        debugPrint('üì± –û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º: –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–∑–∂–µ');

        // Firestore –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        await _firestore
            .collection('users')
            .doc(userId)
            .set(dataToUpdate, SetOptions(merge: true));

        debugPrint('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
      }
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $e');
      rethrow;
    }
  }

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ—Ñ–ª–∞–π–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
  Future<void> updateUserAvatar(String avatarUrl) async {
    try {
      final userId = currentUserId;
      if (userId == null) {
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      debugPrint('üë§ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $userId');
      debugPrint('üñºÔ∏è URL –∞–≤–∞—Ç–∞—Ä–∞: $avatarUrl');

      final updateData = {
        'avatarUrl': avatarUrl,
        'updatedAt': FieldValue.serverTimestamp(),
      };

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
      final isOnline = await NetworkUtils.isNetworkAvailable();

      if (isOnline) {
        await _firestore.collection('users').doc(userId).update(updateData);
        debugPrint('‚úÖ –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω –≤ Firestore');
      } else {
        // –í –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º set —Å merge –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        await _firestore
            .collection('users')
            .doc(userId)
            .set(updateData, SetOptions(merge: true));
        debugPrint('‚úÖ –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
      }
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $e');
      rethrow;
    }
  }

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<void> createUserProfile(Map<String, dynamic> profileData) async {
    try {
      final userId = currentUserId;
      if (userId == null) {
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      debugPrint('üë§ –°–æ–∑–¥–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $userId');

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º FirebaseService –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
      await _firebaseService.createUserProfile(profileData);

      debugPrint('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: $e');
      rethrow;
    }
  }

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<Map<String, dynamic>?> getUserProfile() async {
    try {
      final userId = currentUserId;
      if (userId == null) {
        debugPrint('‚ö†Ô∏è getUserProfile: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return null;
      }

      debugPrint('üë§ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $userId');

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º FirebaseService –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
      final doc = await _firebaseService.getUserProfile();

      if (!doc.exists) {
        debugPrint('‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return null;
      }

      final profileData = doc.data() as Map<String, dynamic>?;
      debugPrint('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω');

      return profileData;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $e');
      return null;
    }
  }

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–æ–π
  Future<void> signOut() async {
    try {
      // üî• –î–û–ë–ê–í–õ–Ø–ï–ú –û–¢–õ–ê–î–ö–£ –î–õ–Ø –ü–û–ò–°–ö–ê –ú–ï–°–¢–ê –í–´–ó–û–í–ê
      if (kDebugMode) {
        debugPrint('üö® UserRepository.signOut() –í–´–ó–í–ê–ù!');
        debugPrint('üìç Stack trace –≤—ã–∑–æ–≤–∞:');
        debugPrint(StackTrace.current.toString());
      }

      final userId = currentUserId;
      debugPrint('üö™ –ù–∞—á–∞–ª–æ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $userId');

      // –í–ê–ñ–ù–û: –û—á–∏—â–∞–µ–º —Å–æ–≥–ª–∞—Å–∏—è –ü–ï–†–ï–î –≤—ã—Ö–æ–¥–æ–º
      debugPrint('üßπ –û—á–∏—â–∞–µ–º —Å–æ–≥–ª–∞—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º');
      await _consentService.clearAllConsents();

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º FirebaseService –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—ã—Ö–æ–¥–∞
      debugPrint('üö™ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ FirebaseService');
      await _firebaseService.signOut();

      debugPrint('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ (—Å –æ—á–∏—Å—Ç–∫–æ–π —Å–æ–≥–ª–∞—Å–∏–π)');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞: $e');

      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø—ã—Ç–∞–µ–º—Å—è –≤—ã–π—Ç–∏ –∏–∑ Firebase
      try {
        await _auth.signOut();
        debugPrint('‚úÖ –ê–≤–∞—Ä–∏–π–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ Firebase Auth –≤—ã–ø–æ–ª–Ω–µ–Ω');
      } catch (signOutError) {
        debugPrint(
          '‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ Firebase: $signOutError',
        );
      }
    }
  }

  /// ‚úÖ –ü–û–õ–ù–û–°–¢–¨–Æ –ü–ï–†–ï–ü–ò–°–ê–ù–û: GDPR-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ —Å–æ –í–°–ï–ú–ò –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<void> deleteAccount() async {
    final FirebaseStorage _storage = FirebaseStorage.instance;

    try {
      final user = currentUser;
      final userId = currentUserId;

      if (user == null || userId == null) {
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      debugPrint('üóëÔ∏è –ù–∞—á–∞–ª–æ –ü–û–õ–ù–û–ì–û —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $userId');

      // ========================================
      // 1. –û–ß–ò–©–ê–ï–ú –°–û–ì–õ–ê–°–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
      // ========================================
      debugPrint('üßπ –®–∞–≥ 1/6: –û—á–∏—â–∞–µ–º —Å–æ–≥–ª–∞—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      try {
        await _consentService.clearAllConsents();
        debugPrint('‚úÖ –°–æ–≥–ª–∞—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—á–∏—â–µ–Ω—ã');
      } catch (e) {
        debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–æ–≥–ª–∞—Å–∏–π: $e');
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Å–æ–≥–ª–∞—Å–∏—è
      }

      // ========================================
      // 2. –£–î–ê–õ–Ø–ï–ú –í–°–ï –î–ê–ù–ù–´–ï –ò–ó FIRESTORE
      // ========================================
      debugPrint('üî• –®–∞–≥ 2/6: –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Firestore');
      try {
        final batch = _firestore.batch();

        // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        final userDocRef = _firestore.collection('users').doc(userId);

        // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        final subcollections = [
          'fishing_notes',
          'marker_maps',
          'budget_notes',
          'user_consents',
          'subscription',
          'user_usage_limits'
        ];

        for (final subcollection in subcollections) {
          try {
            debugPrint('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏: $subcollection');

            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏
            final snapshot = await userDocRef.collection(subcollection).get();
            debugPrint('üìä –ù–∞–π–¥–µ–Ω–æ ${snapshot.docs.length} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ $subcollection');

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ batch –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            for (final doc in snapshot.docs) {
              batch.delete(doc.reference);
            }

            debugPrint('‚úÖ –ü–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—è $subcollection –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ –∫ —É–¥–∞–ª–µ–Ω–∏—é');
          } catch (e) {
            debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏ $subcollection: $e');
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏
          }
        }

        // –£–¥–∞–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        batch.delete(userDocRef);

        // –í—ã–ø–æ–ª–Ω—è–µ–º batch —É–¥–∞–ª–µ–Ω–∏–µ
        await batch.commit();
        debugPrint('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–¥–∞–ª–µ–Ω—ã –∏–∑ Firestore');

      } catch (e) {
        debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firestore: $e');
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ Firestore
      }

      // ========================================
      // 3. –£–î–ê–õ–Ø–ï–ú –í–°–ï –§–ê–ô–õ–´ –ò–ó FIREBASE STORAGE
      // ========================================
      debugPrint('üìÅ –®–∞–≥ 3/6: –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ Firebase Storage');
      try {
        // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–∞–ø–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Storage
        final userStorageRef = _storage.ref().child('users/$userId');

        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        final listResult = await userStorageRef.listAll();

        debugPrint('üìä –ù–∞–π–¥–µ–Ω–æ ${listResult.items.length} —Ñ–∞–π–ª–æ–≤ –≤ Storage –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');

        // –£–¥–∞–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
        for (final fileRef in listResult.items) {
          try {
            await fileRef.delete();
            debugPrint('üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${fileRef.fullPath}');
          } catch (e) {
            debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${fileRef.fullPath}: $e');
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏
          }
        }

        // –£–¥–∞–ª—è–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
        for (final prefixRef in listResult.prefixes) {
          try {
            final nestedListResult = await prefixRef.listAll();
            for (final nestedFileRef in nestedListResult.items) {
              await nestedFileRef.delete();
              debugPrint('üóëÔ∏è –£–¥–∞–ª–µ–Ω –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: ${nestedFileRef.fullPath}');
            }
          } catch (e) {
            debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $e');
          }
        }

        debugPrint('‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–¥–∞–ª–µ–Ω—ã –∏–∑ Storage');

      } catch (e) {
        debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤ –∏–∑ Storage: $e');
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª—ã
      }

      // ========================================
      // 4. –£–î–ê–õ–Ø–ï–ú –í–°–ï –î–ê–ù–ù–´–ï –ò–ó –õ–û–ö–ê–õ–¨–ù–û–ô –ë–ê–ó–´ ISAR
      // ========================================
      debugPrint('üíæ –®–∞–≥ 4/6: –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã Isar');
      try {
        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º IsarService –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–æ–π
        final isarService = IsarService.instance;

        if (isarService.isInitialized) {
          // –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü Isar
          await isarService.deleteAllUserData(userId);
          debugPrint('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–¥–∞–ª–µ–Ω—ã –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã Isar');
        } else {
          debugPrint('‚ö†Ô∏è IsarService –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã');
        }

      } catch (e) {
        debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Isar: $e');
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É
      }

      // ========================================
      // 5. –û–ß–ò–©–ê–ï–ú –õ–û–ö–ê–õ–¨–ù–û–ï –•–†–ê–ù–ò–õ–ò–©–ï (SharedPreferences)
      // ========================================
      debugPrint('üßπ –®–∞–≥ 5/6: –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ');
      try {
        final prefs = await SharedPreferences.getInstance();

        // –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
        final keysToRemove = [
          'auth_user_email',
          'auth_user_id',
          'auth_user_display_name',
          'saved_email',
          'saved_password_hash',
          'offline_auth_enabled',
          'offline_auth_expiry_date',
          'user_consents',
          'subscription_status',
          'subscription_data',
          // –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–ª—é—á–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        ];

        for (final key in keysToRemove) {
          await prefs.remove(key);
        }

        debugPrint('‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –æ—á–∏—â–µ–Ω–æ');

      } catch (e) {
        debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: $e');
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
      }

      // ========================================
      // 6. –£–î–ê–õ–Ø–ï–ú –ê–ö–ö–ê–£–ù–¢ –ò–ó FIREBASE AUTH (–ü–û–°–õ–ï–î–ù–ò–ô –®–ê–ì)
      // ========================================
      debugPrint('üîê –®–∞–≥ 6/6: –£–¥–∞–ª—è–µ–º –∞–∫–∫–∞—É–Ω—Ç –∏–∑ Firebase Auth');
      try {
        await user.delete();
        debugPrint('‚úÖ –ê–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–¥–∞–ª–µ–Ω –∏–∑ Firebase Auth');
      } catch (e) {
        debugPrint('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–∑ Firebase Auth: $e');

        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∏–∑ Auth, —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞
        // –ù–æ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —É–¥–∞–ª–µ–Ω—ã, –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
        throw Exception('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∏–∑ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: $e');
      }

      debugPrint('üéâ –ü–û–õ–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –ê–ö–ö–ê–£–ù–¢–ê –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!');
      debugPrint('üìä –ß—Ç–æ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ:');
      debugPrint('   ‚úÖ –°–æ–≥–ª–∞—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      debugPrint('   ‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Firestore (6 –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–π)');
      debugPrint('   ‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –∏–∑ Firebase Storage');
      debugPrint('   ‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã Isar');
      debugPrint('   ‚úÖ –î–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞');
      debugPrint('   ‚úÖ –ê–∫–∫–∞—É–Ω—Ç –∏–∑ Firebase Auth');

    } catch (e) {
      debugPrint('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞: $e');
      debugPrint('üìç Stack trace: ${StackTrace.current}');
      rethrow;
    }
  }

  // üî• –ù–û–í–û–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  Future<bool> isOnline() async {
    return await NetworkUtils.isNetworkAvailable();
  }

  // üî• –ù–û–í–û–ï: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<void> syncUserData() async {
    try {
      final userId = currentUserId;
      if (userId == null) {
        debugPrint('‚ö†Ô∏è syncUserData: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
      }

      final isOnline = await this.isOnline();
      if (!isOnline) {
        debugPrint('üì± syncUserData: –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É');
        return;
      }

      debugPrint('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $userId');

      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await getUserData(userId);

      debugPrint('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $e');
    }
  }

  // üî• –ù–û–í–û–ï: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  Map<String, dynamic> getAuthStatus() {
    return {
      'isLoggedIn': isUserLoggedIn,
      'userId': currentUserId,
      'isOfflineMode': _firebaseService.isOfflineMode,
      'userEmail': currentUser?.email,
      'isEmailVerified': currentUser?.emailVerified ?? false,
    };
  }

  // üî• –ù–û–í–û–ï: –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  Stream<User?> get authStateChanges => _auth.authStateChanges();

  // üî• –ù–û–í–û–ï: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<void> updateUserEmail(String newEmail) async {
    try {
      final user = currentUser;
      if (user == null) {
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      debugPrint('üìß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.uid}');
      debugPrint('üìß –ù–æ–≤—ã–π email: $newEmail');

      // –û–±–Ω–æ–≤–ª—è–µ–º email –≤ Firebase Auth
      await user.verifyBeforeUpdateEmail(newEmail);

      // –û–±–Ω–æ–≤–ª—è–µ–º email –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await updateUserData({'email': newEmail});

      debugPrint('‚úÖ Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ email: $e');
      rethrow;
    }
  }

  // üî• –ù–û–í–û–ï: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<void> updateUserPassword(String newPassword) async {
    try {
      final user = currentUser;
      if (user == null) {
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      debugPrint('üîë –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.uid}');

      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –≤ Firebase Auth
      await user.updatePassword(newPassword);

      debugPrint('‚úÖ –ü–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è: $e');
      rethrow;
    }
  }

  // üî• –ù–û–í–û–ï: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email
  Future<void> sendEmailVerification() async {
    try {
      final user = currentUser;
      if (user == null) {
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      if (user.emailVerified) {
        debugPrint('‚ÑπÔ∏è Email —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω');
        return;
      }

      debugPrint('üìß –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email: ${user.email}');

      await user.sendEmailVerification();

      debugPrint('‚úÖ –ü–∏—Å—å–º–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: $e');
      rethrow;
    }
  }

  // üî• –ù–û–í–û–ï: –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<void> reloadUser() async {
    try {
      final user = currentUser;
      if (user == null) {
        throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      }

      debugPrint('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.uid}');

      await user.reload();

      debugPrint('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $e');
      rethrow;
    }
  }
}
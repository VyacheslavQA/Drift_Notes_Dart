// –ü—É—Ç—å: lib/screens/settings/accepted_agreements_screen.dart

import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import '../../constants/app_constants.dart';
import '../../localization/app_localizations.dart';
import '../../services/user_consent_service.dart';
import '../../models/user_consent_models.dart';
import '../../screens/help/privacy_policy_screen.dart';
import '../../screens/help/terms_of_service_screen.dart';
import 'document_version_history_screen.dart';
import '../../widgets/user_agreements_dialog.dart';

class AcceptedAgreementsScreen extends StatefulWidget {
  const AcceptedAgreementsScreen({super.key});

  @override
  State<AcceptedAgreementsScreen> createState() => _AcceptedAgreementsScreenState();
}

class _AcceptedAgreementsScreenState extends State<AcceptedAgreementsScreen> {
  final UserConsentService _consentService = UserConsentService();

  bool _isLoading = true;
  bool _isProcessing = false;
  UserConsentStatus? _consentStatus;
  ConsentCheckResult? _consentResult; // –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
  String _privacyPolicyVersion = '';
  String _termsOfServiceVersion = '';
  bool _hasUpdates = false;
  bool _isDependenciesInitialized = false;

  @override
  void initState() {
    super.initState();
    // –ù–ï –≤—ã–∑—ã–≤–∞–µ–º _loadConsentStatus() –∑–¥–µ—Å—å!
    // –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ didChangeDependencies()
  }

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ dependencies –≥–æ—Ç–æ–≤—ã
    if (!_isDependenciesInitialized) {
      _isDependenciesInitialized = true;
      _loadConsentStatus();
    }
  }

  Future<void> _loadConsentStatus() async {
    if (!mounted) return;

    try {
      // –¢–µ–ø–µ—Ä—å –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å AppLocalizations.of(context)
      final localizations = AppLocalizations.of(context);
      final languageCode = localizations.locale.languageCode;

      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–µ–ª–µ–∫—Ç–∏–≤–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É (–æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
      final consentResult = await _consentService.checkUserConsents(languageCode);

      // –ó–∞—Ç–µ–º –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (timestamp –∏ —Ç.–¥.)
      var status = await _consentService.getUserConsentStatus(languageCode);

      final privacyVersion = await _consentService.getCurrentPrivacyPolicyVersion(languageCode);
      final termsVersion = await _consentService.getCurrentTermsOfServiceVersion(languageCode);

      // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ø—Ä–∏ —á–∞—Å—Ç–∏—á–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö
      final user = FirebaseAuth.instance.currentUser;
      if (user != null && consentResult.hasChanges && !consentResult.allValid) {
        debugPrint('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å Firebase');
        await _consentService.syncConsentsFromFirestore(user.uid);

        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        final statusAfterSync = await _consentService.getUserConsentStatus(languageCode);
        debugPrint('üìã –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: Privacy=${statusAfterSync.privacyPolicyAccepted}, Terms=${statusAfterSync.termsOfServiceAccepted}');

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é status
        status = statusAfterSync;
      }

      // –û–¢–õ–ê–î–û–ß–ù–´–ï –õ–û–ì–ò
      debugPrint('üìã –ó–∞–≥—Ä—É–∂–µ–Ω —Å—Ç–∞—Ç—É—Å —Å–æ–≥–ª–∞—Å–∏–π: $consentResult');
      debugPrint('üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:');
      debugPrint('   privacyPolicyAccepted: ${status.privacyPolicyAccepted}');
      debugPrint('   termsOfServiceAccepted: ${status.termsOfServiceAccepted}');
      debugPrint('   needPrivacyPolicy: ${consentResult.needPrivacyPolicy}');
      debugPrint('   needTermsOfService: ${consentResult.needTermsOfService}');
      debugPrint('   allValid: ${consentResult.allValid}');
      debugPrint('   hasChanges: ${consentResult.hasChanges}');
      debugPrint('   Privacy: current=${consentResult.currentPrivacyVersion}, saved=${consentResult.savedPrivacyVersion}');
      debugPrint('   Terms: current=${consentResult.currentTermsVersion}, saved=${consentResult.savedTermsVersion}');

      if (mounted) {
        setState(() {
          _consentStatus = status;
          _consentResult = consentResult;
          _privacyPolicyVersion = privacyVersion;
          _termsOfServiceVersion = termsVersion;
          _hasUpdates = consentResult.hasChanges; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ–ª–µ–∫—Ç–∏–≤–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
          _isLoading = false;
        });

        // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –õ–û–ì–ò –ü–û–°–õ–ï –û–ë–ù–û–í–õ–ï–ù–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø
        debugPrint('üéØ –°–û–°–¢–û–Ø–ù–ò–ï –≠–ö–†–ê–ù–ê –û–ë–ù–û–í–õ–ï–ù–û:');
        debugPrint('   _hasUpdates: $_hasUpdates');
        debugPrint('   Privacy –≤–µ—Ä—Å–∏—è: $_privacyPolicyVersion');
        debugPrint('   Terms –≤–µ—Ä—Å–∏—è: $_termsOfServiceVersion');
      }
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π: $e');
      if (mounted) {
        setState(() {
          _isLoading = false;
        });
      }
    }
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–∏–Ω—è—Ç–∏—è —Å–æ–≥–ª–∞—Å–∏–π
  Future<void> _showSelectiveAgreementsDialog() async {
    if (_consentResult == null || !_consentResult!.hasChanges) {
      debugPrint('‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –∫–æ–≥–¥–∞ –Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π');
      return;
    }

    debugPrint('üì± –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–ª–µ–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å–æ–≥–ª–∞—Å–∏–π');

    showDialog(
      context: context,
      barrierDismissible: false,
      builder: (context) => UserAgreementsDialog(
        onAgreementsAccepted: () {
          debugPrint('‚úÖ –°–æ–≥–ª–∞—Å–∏—è –ø—Ä–∏–Ω—è—Ç—ã —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å');
          _loadConsentStatus(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å
        },
        onCancel: () {
          debugPrint('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –ø—Ä–∏–Ω—è—Ç–∏–µ —Å–æ–≥–ª–∞—Å–∏–π');
        },
      ),
    );
  }

  /// –£–°–¢–ê–†–ï–í–®–ò–ô –ú–ï–¢–û–î: –ü—Ä–∏–Ω—è—Ç–∏–µ –≤—Å–µ—Ö —Å–æ–≥–ª–∞—Å–∏–π (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
  Future<void> _acceptUpdatedAgreements() async {
    final localizations = AppLocalizations.of(context);

    setState(() {
      _isProcessing = true;
    });

    try {
      final success = await _consentService.saveUserConsents(
        privacyPolicyAccepted: true,
        termsOfServiceAccepted: true,
      );

      if (success) {
        debugPrint('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–≥–ª–∞—Å–∏—è –ø—Ä–∏–Ω—è—Ç—ã —É—Å–ø–µ—à–Ω–æ');

        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å
        await _loadConsentStatus();

        if (mounted) {
          ScaffoldMessenger.of(context).showSnackBar(
            SnackBar(
              content: Text(localizations.translate('agreements_updated_successfully') ?? '–°–æ–≥–ª–∞—à–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã'),
              backgroundColor: Colors.green,
            ),
          );
        }
      } else {
        throw Exception(localizations.translate('agreement_save_failed') ?? '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏—è');
      }
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Å–æ–≥–ª–∞—Å–∏–π: $e');
      if (mounted) {
        final localizations = AppLocalizations.of(context);
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('${localizations.translate('error_updating_agreements') ?? '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–≥–ª–∞—à–µ–Ω–∏–π'}: $e'),
            backgroundColor: Colors.red,
          ),
        );
      }
    } finally {
      if (mounted) {
        setState(() {
          _isProcessing = false;
        });
      }
    }
  }

  /// –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–≥–ª–∞—Å–∏–π —Å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π
  Future<void> _declineUpdatedAgreements() async {
    final localizations = AppLocalizations.of(context);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
    final confirmed = await showDialog<bool>(
      context: context,
      builder: (context) => AlertDialog(
        backgroundColor: AppConstants.cardColor,
        title: Text(
          localizations.translate('limited_mode') ?? '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º',
          style: TextStyle(
            color: AppConstants.textColor,
            fontWeight: FontWeight.bold,
          ),
        ),
        content: Text(
          localizations.translate('limited_mode_warning') ??
              '–ï—Å–ª–∏ –≤—ã –Ω–µ –ø—Ä–∏–º–µ—Ç–µ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é —Å–æ–≥–ª–∞—à–µ–Ω–∏–π, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ:\n\n‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π\n‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π\n‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n‚ùå –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.',
          style: TextStyle(
            color: AppConstants.textColor,
          ),
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context, false),
            child: Text(
              localizations.translate('cancel') ?? '–û—Ç–º–µ–Ω–∞',
              style: TextStyle(color: AppConstants.textColor),
            ),
          ),
          ElevatedButton(
            style: ElevatedButton.styleFrom(
              backgroundColor: Colors.orange,
            ),
            onPressed: () => Navigator.pop(context, true),
            child: Text(localizations.translate('continue_limited') ?? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ'),
          ),
        ],
      ),
    );

    if (confirmed == true) {
      debugPrint('üîí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º');

      if (mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text(localizations.translate('limited_mode_activated') ?? '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'),
            backgroundColor: Colors.orange,
          ),
        );
        Navigator.pop(context); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    final localizations = AppLocalizations.of(context);

    return Scaffold(
      backgroundColor: AppConstants.backgroundColor,
      appBar: AppBar(
        title: Text(
          localizations.translate('accepted_agreements') ?? '–ü—Ä–∏–Ω—è—Ç—ã–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è',
          style: TextStyle(
            color: AppConstants.textColor,
            fontSize: 22,
            fontWeight: FontWeight.bold,
          ),
        ),
        backgroundColor: Colors.transparent,
        elevation: 0,
        leading: IconButton(
          icon: Icon(Icons.arrow_back, color: AppConstants.textColor),
          onPressed: () => Navigator.pop(context),
        ),
      ),
      body: _isLoading
          ? Center(
        child: CircularProgressIndicator(
          color: AppConstants.primaryColor,
        ),
      )
          : _buildContent(localizations),
    );
  }

  Widget _buildContent(AppLocalizations localizations) {
    if (_consentStatus == null || _consentResult == null) {
      return Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(
              Icons.error_outline,
              size: 64,
              color: AppConstants.textColor.withOpacity(0.5),
            ),
            const SizedBox(height: 16),
            Text(
              localizations.translate('error_loading_consents') ?? '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π',
              style: TextStyle(
                color: AppConstants.textColor.withOpacity(0.7),
                fontSize: 16,
              ),
            ),
            const SizedBox(height: 16),
            ElevatedButton(
              onPressed: _loadConsentStatus,
              child: Text(localizations.translate('try_again') ?? '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞'),
            ),
          ],
        ),
      );
    }

    return ListView(
      padding: const EdgeInsets.all(16),
      children: [
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö —Å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π
        if (_hasUpdates) ...[
          _buildUpdateNotificationCard(localizations),
          const SizedBox(height: 16),
        ],

        // –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å
        _buildStatusCard(localizations),
        const SizedBox(height: 16),

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ —Å —Å–µ–ª–µ–∫—Ç–∏–≤–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
        _buildDocumentCard(
          title: localizations.translate('privacy_policy') ?? '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏',
          accepted: _consentStatus!.privacyPolicyAccepted,
          needsUpdate: _consentResult!.needPrivacyPolicy,
          currentVersion: _privacyPolicyVersion,
          savedVersion: _consentResult!.savedPrivacyVersion,
          onTap: () => _showPrivacyPolicy(),
          onViewHistory: () => _showPrivacyPolicyHistory(),
          localizations: localizations,
        ),
        const SizedBox(height: 12),

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ —Å —Å–µ–ª–µ–∫—Ç–∏–≤–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
        _buildDocumentCard(
          title: localizations.translate('terms_of_service') ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ',
          accepted: _consentStatus!.termsOfServiceAccepted,
          needsUpdate: _consentResult!.needTermsOfService,
          currentVersion: _termsOfServiceVersion,
          savedVersion: _consentResult!.savedTermsVersion,
          onTap: () => _showTermsOfService(),
          onViewHistory: () => _showTermsOfServiceHistory(),
          localizations: localizations,
        ),
        const SizedBox(height: 16),

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏
        _buildVersionInfo(localizations),
      ],
    );
  }

  /// –ö–∞—Ä—Ç–æ—á–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö —Å —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
  Widget _buildUpdateNotificationCard(AppLocalizations localizations) {
    return Card(
      color: Colors.orange.withOpacity(0.1),
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(12),
        side: BorderSide(color: Colors.orange, width: 1),
      ),
      child: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Icon(
                  Icons.notification_important,
                  color: Colors.orange,
                  size: 24,
                ),
                const SizedBox(width: 12),
                Expanded(
                  child: Text(
                    localizations.translate('new_version_available') ?? '–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è',
                    style: TextStyle(
                      color: AppConstants.textColor,
                      fontSize: 16,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
              ],
            ),
            const SizedBox(height: 8),

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–∏–ª–æ—Å—å
            Text(
              _getUpdateDescription(localizations),
              style: TextStyle(
                color: AppConstants.textColor.withOpacity(0.8),
                fontSize: 14,
              ),
            ),
            const SizedBox(height: 16),

            // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
            Row(
              children: [
                Expanded(
                  child: OutlinedButton(
                    onPressed: _isProcessing ? null : _declineUpdatedAgreements,
                    style: OutlinedButton.styleFrom(
                      side: BorderSide(color: Colors.orange),
                      padding: const EdgeInsets.symmetric(vertical: 12),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(8),
                      ),
                    ),
                    child: Text(
                      localizations.translate('limited_mode') ?? '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º',
                      style: TextStyle(
                        color: Colors.orange,
                        fontSize: 14,
                      ),
                      textAlign: TextAlign.center,
                    ),
                  ),
                ),
                const SizedBox(width: 12),
                Expanded(
                  child: ElevatedButton(
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ–ª–µ–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ –≤–º–µ—Å—Ç–æ –ø—Ä–∏–Ω—è—Ç–∏—è –≤—Å–µ–≥–æ
                    onPressed: _isProcessing ? null : _showSelectiveAgreementsDialog,
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.orange,
                      padding: const EdgeInsets.symmetric(vertical: 12),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(8),
                      ),
                    ),
                    child: _isProcessing
                        ? const SizedBox(
                      width: 16,
                      height: 16,
                      child: CircularProgressIndicator(
                        strokeWidth: 2,
                        valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                      ),
                    )
                        : Text(
                      localizations.translate('accept_updates') ?? '–ü—Ä–∏–Ω—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
                      style: const TextStyle(
                        color: Colors.white,
                        fontSize: 14,
                        fontWeight: FontWeight.bold,
                      ),
                      textAlign: TextAlign.center,
                    ),
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –æ–±–Ω–æ–≤–∏–ª–æ—Å—å
  String _getUpdateDescription(AppLocalizations localizations) {
    if (_consentResult == null) return '';

    List<String> updates = [];

    if (_consentResult!.needPrivacyPolicy) {
      updates.add(localizations.translate('privacy_policy_update_desc') ?? '–ø–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏');
    }

    if (_consentResult!.needTermsOfService) {
      updates.add(localizations.translate('terms_update_desc') ?? '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ');
    }

    if (updates.isEmpty) {
      return localizations.translate('agreements_needed_general') ?? '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏—è.';
    } else if (updates.length == 1) {
      return localizations.translate('single_agreement_update')?.replaceAll('{document}', updates[0]) ??
          '–û–±–Ω–æ–≤–∏–ª–∞—Å—å ${updates[0]}. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é.';
    } else {
      return localizations.translate('multiple_agreements_updated')?.replaceAll('{documents}', updates.join(' –∏ ')) ??
          '–û–±–Ω–æ–≤–∏–ª–∏—Å—å ${updates.join(' –∏ ')}. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –Ω–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏.';
    }
  }

  Widget _buildStatusCard(AppLocalizations localizations) {
    final hasAllConsents = _consentResult!.allValid;

    return Card(
      color: AppConstants.cardColor,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(12),
      ),
      child: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Icon(
                  hasAllConsents ? Icons.check_circle : Icons.warning,
                  color: hasAllConsents ? Colors.green : Colors.orange,
                  size: 24,
                ),
                const SizedBox(width: 12),
                Expanded(
                  child: Text(
                    hasAllConsents
                        ? (localizations.translate('all_agreements_accepted') ?? '–í—Å–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç—ã')
                        : (_hasUpdates
                        ? (localizations.translate('update_required') ?? '–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ')
                        : (localizations.translate('agreements_require_attention') ?? '–°–æ–≥–ª–∞—à–µ–Ω–∏—è —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è')),
                    style: TextStyle(
                      color: AppConstants.textColor,
                      fontSize: 16,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
              ],
            ),
            if (!hasAllConsents) ...[
              const SizedBox(height: 8),
              Text(
                _hasUpdates
                    ? (localizations.translate('please_review_updated_agreements') ?? '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è–º–∏')
                    : (localizations.translate('please_review_and_accept') ?? '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å –∏ –ø—Ä–∏–º–∏—Ç–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è'),
                style: TextStyle(
                  color: AppConstants.textColor.withOpacity(0.7),
                  fontSize: 14,
                ),
              ),
            ],
          ],
        ),
      ),
    );
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ú–ï–¢–û–î: –ö–∞—Ä—Ç–æ—á–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å —Å–µ–ª–µ–∫—Ç–∏–≤–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
  Widget _buildDocumentCard({
    required String title,
    required bool accepted,
    required bool needsUpdate, // –°–µ–ª–µ–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    required String currentVersion,
    String? savedVersion, // –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
    required VoidCallback onTap,
    required VoidCallback onViewHistory,
    required AppLocalizations localizations,
  }) {
    // –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê: –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞
    Color statusColor;
    IconData statusIcon;
    String statusText;

    debugPrint('üîç –°—Ç–∞—Ç—É—Å –∫–∞—Ä—Ç–æ—á–∫–∏ "$title": accepted=$accepted, needsUpdate=$needsUpdate');

    if (!accepted) {
      // –î–æ–∫—É–º–µ–Ω—Ç –≤–æ–æ–±—â–µ –Ω–µ –ø—Ä–∏–Ω—è—Ç
      statusColor = Colors.red;
      statusIcon = Icons.cancel;
      statusText = localizations.translate('not_accepted') ?? '–ù–µ –ø—Ä–∏–Ω—è—Ç–æ';
    } else if (needsUpdate) {
      // –î–æ–∫—É–º–µ–Ω—Ç –ø—Ä–∏–Ω—è—Ç, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      statusColor = Colors.orange;
      statusIcon = Icons.update;
      statusText = localizations.translate('update_required') ?? '–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ';
    } else {
      // –î–æ–∫—É–º–µ–Ω—Ç –ø—Ä–∏–Ω—è—Ç –∏ –∞–∫—Ç—É–∞–ª–µ–Ω
      statusColor = Colors.green;
      statusIcon = Icons.check_circle;
      statusText = localizations.translate('accepted') ?? '–ü—Ä–∏–Ω—è—Ç–æ';
    }

    return Card(
      color: AppConstants.cardColor,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(12),
      ),
      child: Column(
        children: [
          ListTile(
            contentPadding: const EdgeInsets.all(16),
            title: Text(
              title,
              style: TextStyle(
                color: AppConstants.textColor,
                fontSize: 16,
                fontWeight: FontWeight.w600,
              ),
            ),
            subtitle: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                const SizedBox(height: 8),
                Row(
                  children: [
                    Icon(
                      statusIcon,
                      color: statusColor,
                      size: 20,
                    ),
                    const SizedBox(width: 8),
                    Text(
                      statusText,
                      style: TextStyle(
                        color: statusColor,
                        fontSize: 14,
                        fontWeight: FontWeight.w500,
                      ),
                    ),
                  ],
                ),
                const SizedBox(height: 4),
                Text(
                  '${localizations.translate('version') ?? '–í–µ—Ä—Å–∏—è'}: $currentVersion',
                  style: TextStyle(
                    color: AppConstants.textColor.withOpacity(0.6),
                    fontSize: 12,
                  ),
                ),
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏—è—Ö –µ—Å–ª–∏ –µ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                if (needsUpdate && savedVersion != null && savedVersion.isNotEmpty) ...[
                  const SizedBox(height: 2),
                  Text(
                    '${localizations.translate('accepted_version') ?? '–ü—Ä–∏–Ω—è—Ç–∞ –≤–µ—Ä—Å–∏—è'}: $savedVersion ‚Üí $currentVersion',
                    style: TextStyle(
                      color: Colors.orange.withOpacity(0.8),
                      fontSize: 11,
                      fontStyle: FontStyle.italic,
                    ),
                  ),
                ],
                if (_consentStatus!.consentTimestamp != null) ...[
                  const SizedBox(height: 4),
                  Text(
                    '${localizations.translate('accepted_date') ?? '–î–∞—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∏—è'}: ${_formatDate(_consentStatus!.consentTimestamp!)}',
                    style: TextStyle(
                      color: AppConstants.textColor.withOpacity(0.6),
                      fontSize: 12,
                    ),
                  ),
                ],
              ],
            ),
            trailing: Icon(
              Icons.arrow_forward_ios,
              color: AppConstants.textColor.withOpacity(0.5),
              size: 16,
            ),
            onTap: onTap,
          ),

          // –ö–Ω–æ–ø–∫–∞ "–ò—Å—Ç–æ—Ä–∏—è –≤–µ—Ä—Å–∏–π"
          const Divider(height: 1, color: Colors.white10),
          ListTile(
            contentPadding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
            leading: Icon(
              Icons.history,
              color: AppConstants.textColor.withOpacity(0.7),
              size: 20,
            ),
            title: Text(
              localizations.translate('version_history') ?? '–ò—Å—Ç–æ—Ä–∏—è –≤–µ—Ä—Å–∏–π',
              style: TextStyle(
                color: AppConstants.textColor.withOpacity(0.8),
                fontSize: 14,
              ),
            ),
            trailing: Icon(
              Icons.arrow_forward_ios,
              color: AppConstants.textColor.withOpacity(0.5),
              size: 14,
            ),
            onTap: onViewHistory,
          ),
        ],
      ),
    );
  }

  Widget _buildVersionInfo(AppLocalizations localizations) {
    final currentLanguageCode = localizations.locale.languageCode;

    return Card(
      color: AppConstants.cardColor,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(12),
      ),
      child: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              localizations.translate('version_info') ?? '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏',
              style: TextStyle(
                color: AppConstants.textColor,
                fontSize: 16,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 12),
            _buildInfoRow(
              localizations.translate('consent_version') ?? '–í–µ—Ä—Å–∏—è —Å–æ–≥–ª–∞—Å–∏–π',
              _consentStatus!.consentVersion ?? (localizations.translate('not_specified') ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ'),
              localizations,
            ),
            _buildInfoRow(
              localizations.translate('current_version') ?? '–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è',
              _consentStatus!.currentVersion ?? (localizations.translate('unknown') ?? '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'),
              localizations,
            ),
            _buildInfoRow(
              localizations.translate('language') ?? '–Ø–∑—ã–∫',
              _getLanguageDisplayName(currentLanguageCode),
              localizations,
            ),
            _buildInfoRow(
              localizations.translate('version_status') ?? '–°—Ç–∞—Ç—É—Å –≤–µ—Ä—Å–∏–∏',
              !_hasUpdates
                  ? (localizations.translate('current') ?? '–¢–µ–∫—É—â–∞—è')
                  : (localizations.translate('outdated') ?? '–£—Å—Ç–∞—Ä–µ–≤—à–∞—è'),
              localizations,
            ),
          ],
        ),
      ),
    );
  }

  /// –ü–æ–ª—É—á–∞–µ—Ç —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞
  String _getLanguageDisplayName(String languageCode) {
    switch (languageCode.toLowerCase()) {
      case 'ru':
        return '–†—É—Å—Å–∫–∏–π (ru)';
      case 'en':
        return 'English (en)';
      default:
        return languageCode.toUpperCase();
    }
  }

  Widget _buildInfoRow(String label, String value, AppLocalizations localizations) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 4),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          SizedBox(
            width: 120,
            child: Text(
              '$label:',
              style: TextStyle(
                color: AppConstants.textColor.withOpacity(0.7),
                fontSize: 14,
              ),
            ),
          ),
          Expanded(
            child: Text(
              value,
              style: TextStyle(
                color: AppConstants.textColor,
                fontSize: 14,
                fontWeight: FontWeight.w500,
              ),
            ),
          ),
        ],
      ),
    );
  }

  void _showPrivacyPolicy() {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => const PrivacyPolicyScreen(),
      ),
    );
  }

  void _showTermsOfService() {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => const TermsOfServiceScreen(),
      ),
    );
  }

  void _showPrivacyPolicyHistory() {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => const DocumentVersionHistoryScreen(
          documentType: 'privacy_policy',
        ),
      ),
    );
  }

  void _showTermsOfServiceHistory() {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => const DocumentVersionHistoryScreen(
          documentType: 'terms_of_service',
        ),
      ),
    );
  }

  String _formatDate(DateTime date) {
    return '${date.day.toString().padLeft(2, '0')}.${date.month.toString().padLeft(2, '0')}.${date.year}';
  }
}
// –ü—É—Ç—å: lib/screens/marker_maps/components/modern_marker_widget.dart

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

/// –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–∏–¥–∂–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –º–∞—Ä–∫–µ—Ä–∞
/// –í–∫–ª—é—á–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏, —Ç–∞–∫—Ç–∏–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
class ModernMarkerWidget extends StatefulWidget {
  final Map<String, dynamic> marker;
  final Color color;
  final IconData icon;
  final VoidCallback onTap;

  const ModernMarkerWidget({
    super.key,
    required this.marker,
    required this.color,
    required this.icon,
    required this.onTap,
  });

  @override
  State<ModernMarkerWidget> createState() => _ModernMarkerWidgetState();
}

class _ModernMarkerWidgetState extends State<ModernMarkerWidget>
    with SingleTickerProviderStateMixin {
  late AnimationController _animationController;
  late Animation<double> _scaleAnimation;
  late Animation<double> _pulseAnimation;

  bool _isPressed = false;

  @override
  void initState() {
    super.initState();

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π
    _animationController = AnimationController(
      duration: const Duration(milliseconds: 1200),
      vsync: this,
    );

    _scaleAnimation = Tween<double>(
      begin: 0.0,
      end: 1.0,
    ).animate(CurvedAnimation(
      parent: _animationController,
      curve: Curves.elasticOut,
    ));

    _pulseAnimation = Tween<double>(
      begin: 1.0,
      end: 1.3,
    ).animate(CurvedAnimation(
      parent: _animationController,
      curve: Curves.easeInOut,
    ));

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
    _animationController.forward();
  }

  @override
  void dispose() {
    _animationController.dispose();
    super.dispose();
  }

  void _handleTap() {
    // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
    HapticFeedback.lightImpact();

    // –ê–Ω–∏–º–∞—Ü–∏—è –Ω–∞–∂–∞—Ç–∏—è
    _animationController.reset();
    _animationController.forward();

    // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫
    widget.onTap();
  }

  void _handleTapDown() {
    setState(() {
      _isPressed = true;
    });
  }

  void _handleTapUp() {
    setState(() {
      _isPressed = false;
    });
  }

  @override
  Widget build(BuildContext context) {
    final distance = widget.marker['distance'] as double? ?? 0;
    final depth = widget.marker['depth'] as double?;
    final bottomType = widget.marker['bottomType'] as String? ?? '–∏–ª';
    final isPointMarker = bottomType == '—Ç–æ—á–∫–∞'; // üî• –ü–†–û–í–ï–†–ö–ê –Ω–∞ –º–∞—Ä–∫–µ—Ä "—Ç–æ—á–∫–∞"

    return AnimatedBuilder(
      animation: _animationController,
      builder: (context, child) {
        return Transform.scale(
          scale: _scaleAnimation.value * (_isPressed ? 0.9 : 1.0),
          child: GestureDetector(
            onTap: _handleTap,
            onTapDown: (_) => _handleTapDown(),
            onTapUp: (_) => _handleTapUp(),
            onTapCancel: () => _handleTapUp(),
            // üéØ –û–ü–¢–ò–ú–ê–õ–¨–ù–ê–Ø –æ–±–ª–∞—Å—Ç—å –Ω–∞–∂–∞—Ç–∏—è 24x24 (—É–¥–æ–±–Ω–æ, –Ω–æ –±–µ–∑ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–π)
            child: Container(
              width: 24,
              height: 24,
              alignment: Alignment.center,
              child: Stack(
                clipBehavior: Clip.none,
                alignment: Alignment.center,
                children: [
                  // üî• –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –º–∞—Ä–∫–µ—Ä —Å —É—Å–ª–æ–≤–∏—è–º–∏ –¥–ª—è "—Ç–æ—á–∫–∞"
                  Container(
                    width: isPointMarker ? 7 : 14, // üî• –í 2 —Ä–∞–∑–∞ –º–µ–Ω—å—à–µ –¥–ª—è "—Ç–æ—á–∫–∞"
                    height: isPointMarker ? 7 : 14, // üî• –í 2 —Ä–∞–∑–∞ –º–µ–Ω—å—à–µ –¥–ª—è "—Ç–æ—á–∫–∞"
                    decoration: BoxDecoration(
                      shape: BoxShape.circle,
                      color: widget.color.withOpacity(0.9),
                      boxShadow: [
                        BoxShadow(
                          color: Colors.black.withOpacity(0.3),
                          blurRadius: 4,
                          offset: const Offset(0, 2),
                        ),
                        BoxShadow(
                          color: widget.color.withOpacity(0.5),
                          blurRadius: 8,
                          offset: const Offset(0, 0),
                        ),
                      ],
                      border: Border.all(
                        color: Colors.white.withOpacity(0.3),
                        width: 1,
                      ),
                    ),
                    // üî• –£–ë–ò–†–ê–ï–ú –ò–ö–û–ù–ö–£ –¥–ª—è –º–∞—Ä–∫–µ—Ä–∞ "—Ç–æ—á–∫–∞"
                    child: isPointMarker ? null : Icon(
                      widget.icon,
                      color: Colors.black87,
                      size: 8,
                    ),
                  ),

                  // üÜï –ü–û–î–ü–ò–°–¨ –î–ò–°–¢–ê–ù–¶–ò–ò –°–õ–ï–í–ê –û–¢ –ú–ê–†–ö–ï–†–ê (—Ç–µ–º–Ω–æ-—Å–∏–Ω–∏–π)
                  Positioned(
                    right: isPointMarker ? 9 : 16, // üî• –ë–ª–∏–∂–µ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–æ–≥–æ –º–∞—Ä–∫–µ—Ä–∞ "—Ç–æ—á–∫–∞"
                    top: 4, // –û–ø—É—â–µ–Ω–æ –µ—â–µ –Ω–∏–∂–µ (–±—ã–ª–æ 2, —Å—Ç–∞–ª–æ 4)
                    child: Text(
                      '${distance.toInt()}', // –¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏
                      style: const TextStyle(
                        color: Color(0xFF003366), // üî• –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π —Ü–≤–µ—Ç
                        fontSize: 5.5, // üî• –£–≤–µ–ª–∏—á–∏–ª–∏ –Ω–∞ 1 (–±—ã–ª–æ 4.5, —Å—Ç–∞–ª–æ 5.5)
                        fontWeight: FontWeight.w900, // üî• –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∂–∏—Ä–Ω—ã–π
                        shadows: [
                          Shadow(
                            offset: Offset(1, 1),
                            blurRadius: 2,
                            color: Colors.white, // üî• –ë–µ–ª–∞—è —Ç–µ–Ω—å –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
                          ),
                        ],
                      ),
                    ),
                  ),

                  // –ü–æ–¥–ø–∏—Å—å –≥–ª—É–±–∏–Ω—ã —Å–ø—Ä–∞–≤–∞ –æ—Ç –º–∞—Ä–∫–µ—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
                  if (depth != null)
                    Positioned(
                      left: isPointMarker ? 9 : 16, // üî• –ë–ª–∏–∂–µ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–æ–≥–æ –º–∞—Ä–∫–µ—Ä–∞ "—Ç–æ—á–∫–∞"
                      top: 4, // –û–ø—É—â–µ–Ω–æ –µ—â–µ –Ω–∏–∂–µ (–±—ã–ª–æ 2, —Å—Ç–∞–ª–æ 4)
                      child: Text(
                        '${depth.toStringAsFixed(1)}', // üî• –£–±—Ä–∞–ª–∏ –±—É–∫–≤—É "–º"
                        style: const TextStyle(
                          color: Color(0xFF006400), // üî• –¢–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç
                          fontSize: 5.5, // üî• –£–≤–µ–ª–∏—á–∏–ª–∏ –Ω–∞ 1 (–±—ã–ª–æ 4.5, —Å—Ç–∞–ª–æ 5.5)
                          fontWeight: FontWeight.w900, // üî• –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∂–∏—Ä–Ω—ã–π
                          shadows: [
                            Shadow(
                              offset: Offset(1, 1),
                              blurRadius: 2,
                              color: Colors.white, // üî• –ë–µ–ª–∞—è —Ç–µ–Ω—å –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
                            ),
                          ],
                        ),
                      ),
                    ),
                ],
              ),
            ),
          ),
        );
      },
    );
  }
}
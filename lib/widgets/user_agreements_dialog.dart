// –ü—É—Ç—å: lib/widgets/user_agreements_dialog.dart

import 'package:flutter/material.dart';
import 'package:flutter/gestures.dart';
import '../constants/app_constants.dart';
import '../localization/app_localizations.dart';
import '../screens/help/privacy_policy_screen.dart';
import '../screens/help/terms_of_service_screen.dart';
import '../services/user_consent_service.dart';

/// –î–∏–∞–ª–æ–≥ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π —Å —Å–µ–ª–µ–∫—Ç–∏–≤–Ω—ã–º –ø–æ–∫–∞–∑–æ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
class UserAgreementsDialog extends StatefulWidget {
  final VoidCallback onAgreementsAccepted;
  final VoidCallback? onCancel;

  const UserAgreementsDialog({
    super.key,
    required this.onAgreementsAccepted,
    this.onCancel,
  });

  @override
  State<UserAgreementsDialog> createState() => _UserAgreementsDialogState();
}

class _UserAgreementsDialogState extends State<UserAgreementsDialog> {
  bool _privacyPolicyAccepted = false;
  bool _termsOfServiceAccepted = false;
  bool _isProcessing = false;
  bool _isLoading = true;

  ConsentCheckResult? _consentResult;
  final UserConsentService _consentService = UserConsentService();

  @override
  void initState() {
    super.initState();
    _checkUserConsents();
  }

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∫–∏–µ —Å–æ–≥–ª–∞—Å–∏—è –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å
  Future<void> _checkUserConsents() async {
    try {
      final result = await _consentService.checkUserConsents();

      if (mounted) {
        setState(() {
          _consentResult = result;
          _isLoading = false;

          // –ï—Å–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã —É–∂–µ –ø—Ä–∏–Ω—è—Ç—ã —Ä–∞–Ω–µ–µ, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ—á–∞–µ–º –∏—Ö –∫–∞–∫ –ø—Ä–∏–Ω—è—Ç—ã–µ
          // (–Ω—É–∂–Ω—ã –¥–ª—è —Å–ª—É—á–∞—è –∫–æ–≥–¥–∞ –∏–∑–º–µ–Ω–∏–ª—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç)
          _privacyPolicyAccepted = !result.needPrivacyPolicy;
          _termsOfServiceAccepted = !result.needTermsOfService;
        });

        debugPrint('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≥–ª–∞—Å–∏–π: $result');
      }
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–≥–ª–∞—Å–∏–π: $e');
      if (mounted) {
        setState(() {
          _isLoading = false;
          // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
          _consentResult = ConsentCheckResult(
            allValid: false,
            needPrivacyPolicy: true,
            needTermsOfService: true,
            currentPrivacyVersion: '1.0.0',
            currentTermsVersion: '1.0.0',
          );
        });
      }
    }
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
  void _showPrivacyPolicy() {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => const PrivacyPolicyScreen(),
      ),
    );
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
  void _showTermsOfService() {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => const TermsOfServiceScreen(),
      ),
    );
  }

  /// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π (—Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ)
  Future<void> _handleAcceptAgreements() async {
    if (_consentResult == null) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –ù–£–ñ–ù–´–ï –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø—Ä–∏–Ω—è—Ç—ã
    final needsPrivacy = _consentResult!.needPrivacyPolicy;
    final needsTerms = _consentResult!.needTermsOfService;

    if ((needsPrivacy && !_privacyPolicyAccepted) ||
        (needsTerms && !_termsOfServiceAccepted)) {
      _showErrorMessage();
      return;
    }

    setState(() {
      _isProcessing = true;
    });

    try {
      bool success = false;

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ - —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
      if (needsPrivacy || needsTerms) {
        success = await _consentService.saveSelectiveConsents(
          privacyPolicyAccepted: needsPrivacy ? _privacyPolicyAccepted : null,
          termsOfServiceAccepted: needsTerms ? _termsOfServiceAccepted : null,
        );
      } else {
        // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å (–Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å), —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ
        success = await _consentService.saveUserConsents(
          privacyPolicyAccepted: _privacyPolicyAccepted,
          termsOfServiceAccepted: _termsOfServiceAccepted,
        );
      }

      if (success && mounted) {
        debugPrint('‚úÖ –°–æ–≥–ª–∞—Å–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ');
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –∏ –≤—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫
        Navigator.of(context).pop();
        widget.onAgreementsAccepted();
      } else if (mounted) {
        _showSaveErrorMessage();
      }
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π: $e');
      if (mounted) {
        _showSaveErrorMessage();
      }
    } finally {
      if (mounted) {
        setState(() {
          _isProcessing = false;
        });
      }
    }
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (—É–º–Ω–æ–µ)
  void _showErrorMessage() {
    if (_consentResult == null) return;

    final localizations = AppLocalizations.of(context);
    String message;

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å
    if (_consentResult!.needPrivacyPolicy && _consentResult!.needTermsOfService) {
      message = localizations.translate('terms_and_privacy_required') ??
          '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –∏ –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏';
    } else if (_consentResult!.needPrivacyPolicy) {
      message = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏';
    } else if (_consentResult!.needTermsOfService) {
      message = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ';
    } else {
      message = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è';
    }

    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text(message),
        backgroundColor: Colors.red,
        duration: const Duration(seconds: 3),
      ),
    );
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  void _showSaveErrorMessage() {
    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(
        content: Text('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'),
        backgroundColor: Colors.red,
        duration: Duration(seconds: 3),
      ),
    );
  }

  /// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–º–µ–Ω—É
  void _handleCancel() {
    Navigator.of(context).pop();
    if (widget.onCancel != null) {
      widget.onCancel!();
    }
  }

  /// –ü–æ–ª—É—á–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  String _getDialogTitle(AppLocalizations localizations) {
    if (_consentResult == null) {
      return localizations.translate('agreements_title') ?? '–°–æ–≥–ª–∞—à–µ–Ω–∏—è';
    }

    // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å –æ–±–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ - –æ–±—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
    if (_consentResult!.needPrivacyPolicy && _consentResult!.needTermsOfService) {
      return localizations.translate('agreements_title') ?? '–°–æ–≥–ª–∞—à–µ–Ω–∏—è';
    }

    // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –ø–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
    if (_consentResult!.needPrivacyPolicy && !_consentResult!.needTermsOfService) {
      return '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏';
    }

    // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
    if (!_consentResult!.needPrivacyPolicy && _consentResult!.needTermsOfService) {
      return '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è';
    }

    return localizations.translate('agreements_title') ?? '–°–æ–≥–ª–∞—à–µ–Ω–∏—è';
  }

  /// –ü–æ–ª—É—á–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  String _getDialogDescription(AppLocalizations localizations) {
    if (_consentResult == null) {
      return localizations.translate('agreements_description') ??
          '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏—è';
    }

    // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å –æ–±–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    if (_consentResult!.needPrivacyPolicy && _consentResult!.needTermsOfService) {
      return '–û–±–Ω–æ–≤–∏–ª–∏—Å—å —Å–æ–≥–ª–∞—à–µ–Ω–∏—è. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –Ω–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏.';
    }

    // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –ø–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
    if (_consentResult!.needPrivacyPolicy && !_consentResult!.needTermsOfService) {
      return '–û–±–Ω–æ–≤–∏–ª–∞—Å—å –ø–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é.';
    }

    // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
    if (!_consentResult!.needPrivacyPolicy && _consentResult!.needTermsOfService) {
      return '–û–±–Ω–æ–≤–∏–ª–æ—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é.';
    }

    return localizations.translate('agreements_description') ??
        '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏—è';
  }

  /// –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  String _getAcceptButtonText(AppLocalizations localizations) {
    if (_consentResult == null) {
      return localizations.translate('accept') ?? '–ü—Ä–∏–Ω—è—Ç—å';
    }

    // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å –æ–±–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    if (_consentResult!.needPrivacyPolicy && _consentResult!.needTermsOfService) {
      return '–ü—Ä–∏–Ω—è—Ç—å –≤—Å–µ';
    }

    // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç
    if (_consentResult!.needPrivacyPolicy || _consentResult!.needTermsOfService) {
      return '–ü—Ä–∏–Ω—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ';
    }

    return localizations.translate('accept') ?? '–ü—Ä–∏–Ω—è—Ç—å';
  }

  @override
  Widget build(BuildContext context) {
    final localizations = AppLocalizations.of(context);
    final textScaler = MediaQuery.of(context).textScaler;
    final screenSize = MediaQuery.of(context).size;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–∫–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏—è
    if (_isLoading) {
      return WillPopScope(
        onWillPop: () async => false,
        child: Dialog(
          backgroundColor: AppConstants.backgroundColor,
          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
          child: Container(
            constraints: BoxConstraints(
              maxWidth: screenSize.width * 0.9,
              maxHeight: 200,
            ),
            child: const Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  CircularProgressIndicator(),
                  SizedBox(height: 16),
                  Text('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π...'),
                ],
              ),
            ),
          ),
        ),
      );
    }

    return WillPopScope(
      onWillPop: () async => false,
      child: Dialog(
        backgroundColor: AppConstants.backgroundColor,
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
        child: Container(
          constraints: BoxConstraints(
            maxWidth: screenSize.width * 0.9,
            maxHeight: screenSize.height * 0.8,
          ),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              // –ó–∞–≥–æ–ª–æ–≤–æ–∫ (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π)
              Container(
                width: double.infinity,
                padding: const EdgeInsets.all(20),
                decoration: BoxDecoration(
                  color: AppConstants.primaryColor.withOpacity(0.1),
                  borderRadius: const BorderRadius.only(
                    topLeft: Radius.circular(16),
                    topRight: Radius.circular(16),
                  ),
                ),
                child: Column(
                  children: [
                    Icon(
                      _consentResult?.hasChanges == true ? Icons.update : Icons.security,
                      color: AppConstants.primaryColor,
                      size: 48,
                    ),
                    const SizedBox(height: 12),
                    Text(
                      _getDialogTitle(localizations),
                      style: TextStyle(
                        fontSize: 22 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                        fontWeight: FontWeight.bold,
                        color: AppConstants.textColor,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 8),
                    Text(
                      _getDialogDescription(localizations),
                      style: TextStyle(
                        fontSize: 14 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                        color: AppConstants.textColor.withOpacity(0.8),
                      ),
                      textAlign: TextAlign.center,
                    ),
                  ],
                ),
              ),

              // –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (—Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ–µ)
              Flexible(
                child: Padding(
                  padding: const EdgeInsets.all(20),
                  child: Column(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–∞
                      if (_consentResult?.needPrivacyPolicy == true) ...[
                        _buildAgreementCheckbox(
                          value: _privacyPolicyAccepted,
                          onChanged: (value) => setState(() => _privacyPolicyAccepted = value ?? false),
                          text: localizations.translate('i_agree_privacy_policy') ?? '–Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å',
                          linkText: localizations.translate('privacy_policy_agreement') ?? '–ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏',
                          onLinkTap: _showPrivacyPolicy,
                          version: _consentResult?.currentPrivacyVersion,
                          isUpdated: _consentResult?.savedPrivacyVersion != null,
                        ),
                        const SizedBox(height: 16),
                      ],

                      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                      if (_consentResult?.needTermsOfService == true) ...[
                        _buildAgreementCheckbox(
                          value: _termsOfServiceAccepted,
                          onChanged: (value) => setState(() => _termsOfServiceAccepted = value ?? false),
                          text: localizations.translate('i_agree_terms') ?? '–Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å',
                          linkText: localizations.translate('terms_of_service_agreement') ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º',
                          onLinkTap: _showTermsOfService,
                          version: _consentResult?.currentTermsVersion,
                          isUpdated: _consentResult?.savedTermsVersion != null,
                        ),
                        const SizedBox(height: 16),
                      ],

                      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–º, —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å –¥–µ–π—Å—Ç–≤—É—é—â–∏–º (–µ—Å–ª–∏ –µ—Å—Ç—å)
                      if (_consentResult != null &&
                          (!_consentResult!.needPrivacyPolicy || !_consentResult!.needTermsOfService)) ...[
                        Container(
                          padding: const EdgeInsets.all(12),
                          decoration: BoxDecoration(
                            color: Colors.green.withOpacity(0.1),
                            borderRadius: BorderRadius.circular(8),
                            border: Border.all(color: Colors.green.withOpacity(0.3)),
                          ),
                          child: Row(
                            children: [
                              Icon(Icons.check_circle, color: Colors.green, size: 20),
                              const SizedBox(width: 8),
                              Expanded(
                                child: Text(
                                  _buildValidDocumentsText(),
                                  style: TextStyle(
                                    fontSize: 12 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                                    color: Colors.green.shade700,
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                        const SizedBox(height: 16),
                      ],

                      const SizedBox(height: 8),

                      // –ö–Ω–æ–ø–∫–∏
                      Row(
                        children: [
                          // –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
                          Expanded(
                            child: OutlinedButton(
                              onPressed: _isProcessing ? null : _handleCancel,
                              style: OutlinedButton.styleFrom(
                                side: BorderSide(color: AppConstants.textColor.withOpacity(0.5)),
                                padding: const EdgeInsets.symmetric(vertical: 12),
                                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),
                              ),
                              child: Text(
                                localizations.translate('cancel') ?? '–û—Ç–º–µ–Ω–∞',
                                style: TextStyle(
                                  color: AppConstants.textColor,
                                  fontSize: 16 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                                ),
                              ),
                            ),
                          ),

                          const SizedBox(width: 12),

                          // –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ç–µ–∫—Å—Ç)
                          Expanded(
                            child: ElevatedButton(
                              onPressed: _isProcessing ? null : _handleAcceptAgreements,
                              style: ElevatedButton.styleFrom(
                                backgroundColor: AppConstants.primaryColor,
                                padding: const EdgeInsets.symmetric(vertical: 12),
                                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),
                              ),
                              child: _isProcessing
                                  ? const SizedBox(
                                width: 20,
                                height: 20,
                                child: CircularProgressIndicator(
                                  strokeWidth: 2,
                                  valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                                ),
                              )
                                  : Text(
                                _getAcceptButtonText(localizations),
                                style: TextStyle(
                                  color: Colors.white,
                                  fontSize: 16 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  /// –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –æ —Ç–æ–º, –∫–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ—Å—Ç–∞–ª–∏—Å—å –¥–µ–π—Å—Ç–≤—É—é—â–∏–º–∏
  String _buildValidDocumentsText() {
    if (_consentResult == null) return '';

    List<String> validDocs = [];

    if (!_consentResult!.needPrivacyPolicy) {
      validDocs.add('–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ v${_consentResult!.savedPrivacyVersion ?? '—Ç–µ–∫—É—â–∞—è'} –æ—Å—Ç–∞–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤—É—é—â–µ–π');
    }

    if (!_consentResult!.needTermsOfService) {
      validDocs.add('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ v${_consentResult!.savedTermsVersion ?? '—Ç–µ–∫—É—â–µ–µ'} –æ—Å—Ç–∞–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤—É—é—â–∏–º');
    }

    return validDocs.join('. ');
  }

  /// –°–æ–∑–¥–∞–µ—Ç –≤–∏–¥–∂–µ—Ç checkbox —Å —Ç–µ–∫—Å—Ç–æ–º –∏ —Å—Å—ã–ª–∫–æ–π (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π)
  Widget _buildAgreementCheckbox({
    required bool value,
    required ValueChanged<bool?> onChanged,
    required String text,
    required String linkText,
    required VoidCallback onLinkTap,
    String? version,
    bool isUpdated = false,
  }) {
    final textScaler = MediaQuery.of(context).textScaler;

    return Container(
      decoration: BoxDecoration(
        color: isUpdated ? Colors.blue.withOpacity(0.05) : null,
        borderRadius: BorderRadius.circular(8),
        border: isUpdated ? Border.all(color: Colors.blue.withOpacity(0.2)) : null,
      ),
      padding: const EdgeInsets.all(8),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // Checkbox
          Transform.scale(
            scale: 1.2,
            child: Checkbox(
              value: value,
              onChanged: onChanged,
              activeColor: AppConstants.primaryColor,
              checkColor: Colors.white,
              side: BorderSide(
                color: AppConstants.textColor.withOpacity(0.5),
                width: 1.5,
              ),
            ),
          ),

          const SizedBox(width: 12),

          // –¢–µ–∫—Å—Ç —Å —Å—Å—ã–ª–∫–æ–π –∏ –≤–µ—Ä—Å–∏–µ–π
          Expanded(
            child: Padding(
              padding: const EdgeInsets.only(top: 12),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  RichText(
                    text: TextSpan(
                      style: TextStyle(
                        color: AppConstants.textColor,
                        fontSize: 14 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                        height: 1.4,
                      ),
                      children: [
                        TextSpan(text: text),
                        const TextSpan(text: ' '),
                        TextSpan(
                          text: linkText,
                          style: TextStyle(
                            color: AppConstants.primaryColor,
                            decoration: TextDecoration.underline,
                            fontWeight: FontWeight.w500,
                          ),
                          recognizer: TapGestureRecognizer()..onTap = onLinkTap,
                        ),
                      ],
                    ),
                  ),

                  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
                  if (version != null || isUpdated) ...[
                    const SizedBox(height: 4),
                    Row(
                      children: [
                        if (isUpdated) ...[
                          Icon(Icons.fiber_new, size: 16, color: Colors.blue),
                          const SizedBox(width: 4),
                          Text(
                            '–û–ë–ù–û–í–õ–ï–ù–û',
                            style: TextStyle(
                              fontSize: 11 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                              color: Colors.blue,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                          const SizedBox(width: 8),
                        ],
                        if (version != null) ...[
                          Text(
                            '–≤–µ—Ä—Å–∏—è $version',
                            style: TextStyle(
                              fontSize: 11 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                              color: AppConstants.textColor.withOpacity(0.6),
                              fontStyle: FontStyle.italic,
                            ),
                          ),
                        ],
                      ],
                    ),
                  ],
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}
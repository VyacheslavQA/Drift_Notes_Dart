// –ü—É—Ç—å: lib/widgets/user_agreements_dialog.dart

import 'package:flutter/material.dart';
import 'package:flutter/gestures.dart';
import '../constants/app_constants.dart';
import '../localization/app_localizations.dart';
import '../screens/help/privacy_policy_screen.dart';
import '../screens/help/terms_of_service_screen.dart';
import '../services/user_consent_service.dart';

/// ‚úÖ –°–ï–õ–ï–ö–¢–ò–í–ù–´–ô –¥–∏–∞–ª–æ–≥ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
class UserAgreementsDialog extends StatefulWidget {
  final VoidCallback onAgreementsAccepted;
  final VoidCallback? onCancel;
  final bool isRegistration; // –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

  // ‚úÖ –ù–û–í–´–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞
  final bool showPrivacyPolicy;
  final bool showTermsOfService;

  // ‚úÖ –ù–û–í–´–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö
  final List<String> outdatedPolicies; // ['privacy', 'terms'] –∏–ª–∏ –∏—Ö –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ

  const UserAgreementsDialog({
    super.key,
    required this.onAgreementsAccepted,
    this.onCancel,
    this.isRegistration = false,
    // ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    this.showPrivacyPolicy = true,
    this.showTermsOfService = true,
    this.outdatedPolicies = const ['privacy', 'terms'], // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ
  });

  @override
  State<UserAgreementsDialog> createState() => _UserAgreementsDialogState();
}

class _UserAgreementsDialogState extends State<UserAgreementsDialog> {
  bool _privacyPolicyAccepted = false;
  bool _termsOfServiceAccepted = false;
  bool _isProcessing = false;

  final UserConsentService _consentService = UserConsentService();

  @override
  void initState() {
    super.initState();
    debugPrint('üîç –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–ª–µ–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å–æ–≥–ª–∞—Å–∏–π');
    debugPrint('üìã –ü–æ–∫–∞–∑–∞—Ç—å Privacy Policy: ${widget.showPrivacyPolicy}');
    debugPrint('üìã –ü–æ–∫–∞–∑–∞—Ç—å Terms of Service: ${widget.showTermsOfService}');
    debugPrint('üìã –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏: ${widget.outdatedPolicies}');

    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ–º —Å–∫—Ä—ã—Ç—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    if (!widget.showPrivacyPolicy) {
      _privacyPolicyAccepted = true;
      debugPrint('üîí Privacy Policy —Å–∫—Ä—ã—Ç - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω—è—Ç');
    }
    if (!widget.showTermsOfService) {
      _termsOfServiceAccepted = true;
      debugPrint('üîí Terms of Service —Å–∫—Ä—ã—Ç - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω—è—Ç');
    }

    debugPrint('üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:');
    debugPrint('   - _privacyPolicyAccepted: $_privacyPolicyAccepted');
    debugPrint('   - _termsOfServiceAccepted: $_termsOfServiceAccepted');
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
  void _showPrivacyPolicy() {
    Navigator.of(context).push(
      MaterialPageRoute(builder: (context) => const PrivacyPolicyScreen()),
    );
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
  void _showTermsOfService() {
    Navigator.of(context).push(
      MaterialPageRoute(builder: (context) => const TermsOfServiceScreen()),
    );
  }

  /// ‚úÖ –°–ï–õ–ï–ö–¢–ò–í–ù–û–ï –ø—Ä–∏–Ω—è—Ç–∏–µ - –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
  Future<void> _handleAcceptAgreements() async {
    // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø—Ä–∏–Ω—è—Ç—ã
    if ((widget.showPrivacyPolicy && !_privacyPolicyAccepted) ||
        (widget.showTermsOfService && !_termsOfServiceAccepted)) {
      _showErrorMessage();
      return;
    }

    setState(() {
      _isProcessing = true;
    });

    try {
      // ‚úÖ –°–ï–õ–ï–ö–¢–ò–í–ù–û–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ - –ø–µ—Ä–µ–¥–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å
      final success = await _consentService.saveSelectiveConsents(
        privacyPolicyAccepted: widget.showPrivacyPolicy ? _privacyPolicyAccepted : null,
        termsOfServiceAccepted: widget.showTermsOfService ? _termsOfServiceAccepted : null,
        outdatedPolicies: widget.outdatedPolicies, // ‚úÖ –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –ø–æ–ª–∏—Ç–∏–∫
      );

      if (success && mounted) {
        debugPrint('‚úÖ –°–µ–ª–µ–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–≥–ª–∞—Å–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
        debugPrint('üìã –û–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ–ª–∏—Ç–∏–∫–∏: ${widget.outdatedPolicies}');
        Navigator.of(context).pop();
        widget.onAgreementsAccepted();
      } else if (mounted) {
        _showSaveErrorMessage();
      }
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π: $e');
      if (mounted) {
        _showSaveErrorMessage();
      }
    } finally {
      if (mounted) {
        setState(() {
          _isProcessing = false;
        });
      }
    }
  }

  /// –û—Ç–∫–∞–∑ –æ—Ç –ø—Ä–∏–Ω—è—Ç–∏—è —Å–æ–≥–ª–∞—à–µ–Ω–∏–π
  Future<void> _handleDeclineAgreements() async {
    debugPrint('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª —Å–æ–≥–ª–∞—à–µ–Ω–∏—è');

    if (mounted) {
      Navigator.of(context).pop();
      if (widget.onCancel != null) {
        widget.onCancel!();
      }
    }
  }

  /// ‚úÖ –ê–î–ê–ü–¢–ò–í–ù–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  void _showErrorMessage() {
    final localizations = AppLocalizations.of(context);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å
    List<String> requiredDocs = [];
    if (widget.showPrivacyPolicy && !_privacyPolicyAccepted) {
      requiredDocs.add(localizations.translate('privacy_policy') ?? '–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏');
    }
    if (widget.showTermsOfService && !_termsOfServiceAccepted) {
      requiredDocs.add(localizations.translate('terms_of_service') ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ');
    }

    String message;
    if (requiredDocs.length == 1) {
      message = '${localizations.translate('need_to_accept') ?? '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å'} ${requiredDocs.first}';
    } else {
      message = localizations.translate('agreements_required') ?? '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –≤—Å–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è';
    }

    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text(message),
        backgroundColor: Colors.red,
        duration: const Duration(seconds: 3),
      ),
    );
  }

  /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  void _showSaveErrorMessage() {
    final localizations = AppLocalizations.of(context);
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text(
          localizations.translate('error_saving_agreements') ??
              '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
        ),
        backgroundColor: Colors.red,
        duration: const Duration(seconds: 3),
      ),
    );
  }

  /// ‚úÖ –ê–î–ê–ü–¢–ò–í–ù–´–ô –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  String _getDialogTitle(AppLocalizations localizations) {
    if (widget.isRegistration) {
      return localizations.translate('accept_agreements_title') ?? '–ü—Ä–∏–Ω—è—Ç–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π';
    } else {
      // –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      if (widget.outdatedPolicies.length == 1) {
        String policyName = widget.outdatedPolicies.first == 'privacy'
            ? (localizations.translate('privacy_policy') ?? '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏')
            : (localizations.translate('terms_of_service') ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ');
        return '${localizations.translate('update_single_policy') ?? '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ'} $policyName';
      } else {
        return localizations.translate('agreements_update_title') ?? '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–π';
      }
    }
  }

  /// ‚úÖ –ê–î–ê–ü–¢–ò–í–ù–û–ï –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  String _getDialogDescription(AppLocalizations localizations) {
    if (widget.isRegistration) {
      return localizations.translate('accept_agreements_description') ??
          '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏—è';
    } else {
      // –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–∏–ª–æ—Å—å
      if (widget.outdatedPolicies.length == 1) {
        String policyName = widget.outdatedPolicies.first == 'privacy'
            ? (localizations.translate('privacy_policy') ?? '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏')
            : (localizations.translate('terms_of_service') ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ');
        return '${localizations.translate('single_policy_updated') ?? '–û–±–Ω–æ–≤–∏–ª–∞—Å—å'} $policyName. ${localizations.translate('please_review_accept') ?? '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å –∏ –ø—Ä–∏–º–∏—Ç–µ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é.'}';
      } else {
        return localizations.translate('agreements_update_description') ??
            '–û–±–Ω–æ–≤–∏–ª–∏—Å—å —Å–æ–≥–ª–∞—à–µ–Ω–∏—è. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –Ω–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏.';
      }
    }
  }

  /// ‚úÖ –°–ï–õ–ï–ö–¢–ò–í–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ - —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∏–Ω—è—Ç—ã
  bool _canAccept() {
    bool privacyOk = !widget.showPrivacyPolicy || _privacyPolicyAccepted;
    bool termsOk = !widget.showTermsOfService || _termsOfServiceAccepted;
    return privacyOk && termsOk;
  }

  /// ‚úÖ –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ô –º–µ—Ç–æ–¥ - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–∫–∞–∑–∞
  bool _hasDocumentsToShow() {
    final hasDocuments = widget.showPrivacyPolicy || widget.showTermsOfService;
    debugPrint('üîç _hasDocumentsToShow(): $hasDocuments');
    debugPrint('   - showPrivacyPolicy: ${widget.showPrivacyPolicy}');
    debugPrint('   - showTermsOfService: ${widget.showTermsOfService}');
    return hasDocuments;
  }

  @override
  Widget build(BuildContext context) {
    final localizations = AppLocalizations.of(context);
    final textScaler = MediaQuery.of(context).textScaler;
    final screenSize = MediaQuery.of(context).size;

    // ‚úÖ –ó–ê–©–ò–¢–ê: –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–∫–∞–∑–∞, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
    if (!_hasDocumentsToShow()) {
      WidgetsBinding.instance.addPostFrameCallback((_) {
        if (mounted) {
          Navigator.of(context).pop();
          widget.onAgreementsAccepted();
        }
      });
      return const SizedBox.shrink();
    }

    return WillPopScope(
      onWillPop: () async => false, // –ù–µ–ª—å–∑—è –∑–∞–∫—Ä—ã—Ç—å –±–µ–∑ –ø—Ä–∏–Ω—è—Ç–∏—è
      child: Dialog(
        backgroundColor: AppConstants.backgroundColor,
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
        child: Container(
          constraints: BoxConstraints(
            maxWidth: screenSize.width * 0.9,
            maxHeight: screenSize.height * 0.8,
          ),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              // ‚úÖ –ê–î–ê–ü–¢–ò–í–ù–´–ô –∑–∞–≥–æ–ª–æ–≤–æ–∫
              Container(
                width: double.infinity,
                padding: const EdgeInsets.all(20),
                decoration: BoxDecoration(
                  color: AppConstants.primaryColor.withOpacity(0.1),
                  borderRadius: const BorderRadius.only(
                    topLeft: Radius.circular(16),
                    topRight: Radius.circular(16),
                  ),
                ),
                child: Column(
                  children: [
                    Icon(
                      widget.isRegistration ? Icons.security : Icons.update,
                      color: AppConstants.primaryColor,
                      size: 48,
                    ),
                    const SizedBox(height: 12),
                    Text(
                      _getDialogTitle(localizations),
                      style: TextStyle(
                        fontSize: 22 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                        fontWeight: FontWeight.bold,
                        color: AppConstants.textColor,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 8),
                    Text(
                      _getDialogDescription(localizations),
                      style: TextStyle(
                        fontSize: 14 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                        color: AppConstants.textColor.withOpacity(0.8),
                      ),
                      textAlign: TextAlign.center,
                    ),
                  ],
                ),
              ),

              // ‚úÖ –°–ï–õ–ï–ö–¢–ò–í–ù–û–ï —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
              Flexible(
                child: Padding(
                  padding: const EdgeInsets.all(20),
                  child: Column(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      // ‚úÖ –£–°–õ–û–í–ù–û–ï –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                      if (widget.showPrivacyPolicy) ...[
                        _buildSelectiveAgreementCheckbox(
                          value: _privacyPolicyAccepted,
                          onChanged: (value) => setState(() => _privacyPolicyAccepted = value ?? false),
                          text: localizations.translate('i_agree_to') ?? '–Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å',
                          linkText: localizations.translate('privacy_policy') ?? '–ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏',
                          onLinkTap: _showPrivacyPolicy,
                          isUpdated: widget.outdatedPolicies.contains('privacy'),
                        ),
                        if (widget.showTermsOfService) const SizedBox(height: 16),
                      ],

                      // ‚úÖ –£–°–õ–û–í–ù–û–ï –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
                      if (widget.showTermsOfService) ...[
                        _buildSelectiveAgreementCheckbox(
                          value: _termsOfServiceAccepted,
                          onChanged: (value) => setState(() => _termsOfServiceAccepted = value ?? false),
                          text: localizations.translate('i_agree_to') ?? '–Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å',
                          linkText: localizations.translate('terms_of_service') ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º',
                          onLinkTap: _showTermsOfService,
                          isUpdated: widget.outdatedPolicies.contains('terms'),
                        ),
                      ],

                      const SizedBox(height: 24),

                      // ‚úÖ –ê–î–ê–ü–¢–ò–í–ù–´–ï –∫–Ω–æ–ø–∫–∏
                      Row(
                        children: [
                          // –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
                          Expanded(
                            child: OutlinedButton(
                              onPressed: _isProcessing ? null : _handleDeclineAgreements,
                              style: OutlinedButton.styleFrom(
                                side: BorderSide(color: Colors.red.withOpacity(0.7)),
                                padding: const EdgeInsets.symmetric(vertical: 12),
                                shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(8),
                                ),
                              ),
                              child: Text(
                                widget.isRegistration
                                    ? (localizations.translate('exit_app') ?? '–í—ã–π—Ç–∏ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è')
                                    : (localizations.translate('decline') ?? '–û—Ç–∫–ª–æ–Ω–∏—Ç—å'),
                                style: TextStyle(
                                  color: Colors.red,
                                  fontSize: 16 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                                  fontWeight: FontWeight.w600,
                                ),
                              ),
                            ),
                          ),

                          const SizedBox(width: 12),

                          // –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è
                          Expanded(
                            child: ElevatedButton(
                              onPressed: (_isProcessing || !_canAccept()) ? null : _handleAcceptAgreements,
                              style: ElevatedButton.styleFrom(
                                backgroundColor: AppConstants.primaryColor,
                                disabledBackgroundColor: AppConstants.primaryColor.withOpacity(0.3),
                                padding: const EdgeInsets.symmetric(vertical: 12),
                                shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(8),
                                ),
                              ),
                              child: _isProcessing
                                  ? const SizedBox(
                                width: 20,
                                height: 20,
                                child: CircularProgressIndicator(
                                  strokeWidth: 2,
                                  valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                                ),
                              )
                                  : Text(
                                localizations.translate('accept') ?? '–ü—Ä–∏–Ω—è—Ç—å',
                                style: TextStyle(
                                  color: Colors.white,
                                  fontSize: 16 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                                  fontWeight: FontWeight.bold,
                                ),
                                textAlign: TextAlign.center,
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  /// ‚úÖ –°–ï–õ–ï–ö–¢–ò–í–ù–´–ô –≤–∏–¥–∂–µ—Ç checkbox —Å –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  Widget _buildSelectiveAgreementCheckbox({
    required bool value,
    required ValueChanged<bool?> onChanged,
    required String text,
    required String linkText,
    required VoidCallback onLinkTap,
    required bool isUpdated, // –ù–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä - —É–∫–∞–∑—ã–≤–∞–µ—Ç —á—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω
  }) {
    final textScaler = MediaQuery.of(context).textScaler;
    final localizations = AppLocalizations.of(context);

    return Container(
      padding: const EdgeInsets.all(8),
      // ‚úÖ –í—ã–¥–µ–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
      decoration: isUpdated && !widget.isRegistration
          ? BoxDecoration(
        color: AppConstants.primaryColor.withOpacity(0.05),
        borderRadius: BorderRadius.circular(8),
        border: Border.all(
          color: AppConstants.primaryColor.withOpacity(0.2),
          width: 1,
        ),
      )
          : null,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // ‚úÖ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          if (isUpdated && !widget.isRegistration)
            Padding(
              padding: const EdgeInsets.only(bottom: 8),
              child: Row(
                children: [
                  Icon(
                    Icons.new_releases,
                    color: AppConstants.primaryColor,
                    size: 16,
                  ),
                  const SizedBox(width: 4),
                  Text(
                    localizations.translate('document_updated') ?? '–î–æ–∫—É–º–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω',
                    style: TextStyle(
                      color: AppConstants.primaryColor,
                      fontSize: 12 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                ],
              ),
            ),

          // –û—Å–Ω–æ–≤–Ω–æ–π checkbox —Å —Ç–µ–∫—Å—Ç–æ–º
          Row(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Checkbox
              Transform.scale(
                scale: 1.2,
                child: Checkbox(
                  value: value,
                  onChanged: onChanged,
                  activeColor: AppConstants.primaryColor,
                  checkColor: Colors.white,
                  side: BorderSide(
                    color: AppConstants.textColor.withOpacity(0.5),
                    width: 1.5,
                  ),
                ),
              ),

              const SizedBox(width: 12),

              // –¢–µ–∫—Å—Ç —Å —Å—Å—ã–ª–∫–æ–π
              Expanded(
                child: Padding(
                  padding: const EdgeInsets.only(top: 12),
                  child: RichText(
                    text: TextSpan(
                      style: TextStyle(
                        color: AppConstants.textColor,
                        fontSize: 14 * (textScaler.scale(1.0) > 1.2 ? 1.2 / textScaler.scale(1.0) : 1),
                        height: 1.4,
                      ),
                      children: [
                        TextSpan(text: text),
                        const TextSpan(text: ' '),
                        TextSpan(
                          text: linkText,
                          style: TextStyle(
                            color: AppConstants.primaryColor,
                            decoration: TextDecoration.underline,
                            fontWeight: FontWeight.w500,
                          ),
                          recognizer: TapGestureRecognizer()..onTap = onLinkTap,
                        ),
                      ],
                    ),
                  ),
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
}
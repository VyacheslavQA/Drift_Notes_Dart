// –ü—É—Ç—å: lib/models/isar/fishing_note_entity.dart

import 'package:isar/isar.dart';

part 'fishing_note_entity.g.dart';

@Collection()
class FishingNoteEntity {
  Id id = Isar.autoIncrement; // Isar ID, auto-increment

  @Index(unique: true)
  String? firebaseId; // ID –∏–∑ Firestore

  late String title;

  String? description;

  late DateTime date;

  // üî• –î–û–ë–ê–í–õ–ï–ù–û: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω—ã—Ö —Ä—ã–±–∞–ª–æ–∫
  DateTime? endDate; // –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è (–¥–ª—è –º–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω—ã—Ö —Ä—ã–±–∞–ª–æ–∫)
  bool isMultiDay = false; // –§–ª–∞–≥ –º–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω–æ–π —Ä—ã–±–∞–ª–∫–∏

  String? location;

  WeatherDataEntity? weatherData;

  List<BiteRecordEntity> biteRecords = [];

  bool isSynced = false; // –§–ª–∞–≥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Firebase

  DateTime createdAt = DateTime.now();
  DateTime updatedAt = DateTime.now();
}

@embedded
class WeatherDataEntity {
  double? temperature; // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –¶–µ–ª—å—Å–∏—è
  double? feelsLike; // üî• –î–û–ë–ê–í–õ–ï–ù–û: –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫
  double? humidity; // –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
  double? windSpeed; // –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –≤ –º/—Å
  String? windDirection; // –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞
  double? pressure; // –î–∞–≤–ª–µ–Ω–∏–µ –≤ –º–º —Ä—Ç. —Å—Ç.
  double? cloudCover; // üî• –î–û–ë–ê–í–õ–ï–ù–û: –û–±–ª–∞—á–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
  bool isDay = true; // üî• –î–û–ë–ê–í–õ–ï–ù–û: –î–µ–Ω—å/–Ω–æ—á—å
  String? sunrise; // üî• –î–û–ë–ê–í–õ–ï–ù–û: –í—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞
  String? sunset; // üî• –î–û–ë–ê–í–õ–ï–ù–û: –í—Ä–µ–º—è –∑–∞–∫–∞—Ç–∞
  String? condition; // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã (—è—Å–Ω–æ, –æ–±–ª–∞—á–Ω–æ, –¥–æ–∂–¥—å –∏ —Ç.–¥.)
  DateTime? recordedAt; // –í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
}

@embedded
class BiteRecordEntity {
  DateTime? time; // –í—Ä–µ–º—è –ø–æ–∫–ª–µ–≤–∫–∏
  String? fishType; // –¢–∏–ø —Ä—ã–±—ã
  String? baitUsed; // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–∏–º–∞–Ω–∫–∞
  bool success = false; // –£—Å–ø–µ—à–Ω–∞—è –ª–∏ –±—ã–ª–∞ –ø–æ–∫–ª–µ–≤–∫–∞ (–ø–æ–π–º–∞–ª–∏ —Ä—ã–±—É)
  double? fishWeight; // –í–µ—Å —Ä—ã–±—ã –≤ –∫–≥ (–µ—Å–ª–∏ –ø–æ–π–º–∞–ª–∏)
  double? fishLength; // –î–ª–∏–Ω–∞ —Ä—ã–±—ã –≤ —Å–º (–µ—Å–ª–∏ –ø–æ–π–º–∞–ª–∏)
  String? notes; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –æ –ø–æ–∫–ª–µ–≤–∫–µ
}
// –ü—É—Ç—å: lib/providers/language_provider.dart

import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import '../utils/countries_data.dart';
import '../services/weather_notification_service.dart';

class LanguageProvider extends ChangeNotifier {
  Locale _currentLocale = const Locale('ru', 'RU');
  static const String _prefsKey = 'app_language';
  static const String _systemLanguageKey = 'use_system_language';

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –§–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  bool _isInitialized = false;

  LanguageProvider() {
    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±–∏—Ä–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤ –∏–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
    // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üèóÔ∏è LanguageProvider —Å–æ–∑–¥–∞–Ω —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º —è–∑—ã–∫–æ–º: ${_currentLocale.languageCode}');
  }

  // –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞–ª–∏
  Locale get currentLocale => _currentLocale;

  // –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞ —è–∑—ã–∫–∞
  String get languageCode => _currentLocale.languageCode;

  // –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  bool get isInitialized => _isInitialized;

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ main)
  Future<void> initialize() async {
    if (_isInitialized) return;

    // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LanguageProvider...');
    await _loadSavedLanguage();
    _isInitialized = true;
    // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚úÖ LanguageProvider –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –∏–∑ SharedPreferences
  Future<void> _loadSavedLanguage() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      final useSystemLanguage = prefs.getBool(_systemLanguageKey) ?? false;

      if (useSystemLanguage) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —è–∑—ã–∫
        final systemLocale = await getDeviceLocale();
        _currentLocale = systemLocale;
        // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üì± –ó–∞–≥—Ä—É–∂–µ–Ω —Å–∏—Å—Ç–µ–º–Ω—ã–π —è–∑—ã–∫: ${_currentLocale.languageCode}');
      } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —è–∑—ã–∫
        final savedLanguage = prefs.getString(_prefsKey);
        if (savedLanguage != null) {
          _currentLocale = Locale(savedLanguage);
          // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üíæ –ó–∞–≥—Ä—É–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —è–∑—ã–∫: ${_currentLocale.languageCode}');
        } else {
          // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —è–∑—ã–∫: ${_currentLocale.languageCode}');
        }
      }

      // –î–û–ë–ê–í–õ–ï–ù–û: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å WeatherNotificationService –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
      await _syncWeatherServiceLanguage();

      // –ò–°–ü–†–ê–í–õ–ï–ù–û: notifyListeners —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Å–ª—É—à–∞—Ç–µ–ª–∏
      if (_isInitialized) {
        notifyListeners();
      }
    } catch (e) {
      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —è–∑—ã–∫–∞: $e');
      // –ü—Ä–∏ –æ—à–∏–±–∫–µ –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —è–∑—ã–∫
    }
  }

  // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —è–∑—ã–∫–∞
  Future<void> changeLanguage(Locale newLocale) async {
    if (_currentLocale == newLocale) {
      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üîÑ –Ø–∑—ã–∫ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${newLocale.languageCode}');
      // –û—á–∏—â–∞–µ–º –∫—ç—à –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
      CountriesData.clearGeographyCache();
      return;
    }

    // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üåê –°–º–µ–Ω–∞ —è–∑—ã–∫–∞ —Å ${_currentLocale.languageCode} –Ω–∞ ${newLocale.languageCode}');

    _currentLocale = newLocale;

    try {
      final prefs = await SharedPreferences.getInstance();
      await prefs.setString(_prefsKey, newLocale.languageCode);
      await prefs.setBool(
        _systemLanguageKey,
        false,
      ); // –û—Ç–∫–ª—é—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —è–∑—ã–∫

      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚úÖ –Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö: ${newLocale.languageCode}');
    } catch (e) {
      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —è–∑—ã–∫–∞: $e');
    }

    // –î–û–ë–ê–í–õ–ï–ù–û: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å WeatherNotificationService
    await _syncWeatherServiceLanguage();

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö —Å–ª—É—à–∞—Ç–µ–ª–µ–π –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    notifyListeners();

    // –û—á–∏—â–∞–µ–º –∫—ç—à –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
    CountriesData.clearGeographyCache();
  }

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —è–∑—ã–∫–∞
  Future<void> setSystemLanguage() async {
    // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —è–∑—ã–∫–∞');

    try {
      final systemLocale = await getDeviceLocale();
      _currentLocale = systemLocale;

      final prefs = await SharedPreferences.getInstance();
      await prefs.setBool(_systemLanguageKey, true);
      await prefs.remove(_prefsKey); // –£–¥–∞–ª—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫

      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å–∏—Å—Ç–µ–º–Ω—ã–π —è–∑—ã–∫: ${systemLocale.languageCode}');
    } catch (e) {
      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —è–∑—ã–∫–∞: $e');
    }

    // –î–û–ë–ê–í–õ–ï–ù–û: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å WeatherNotificationService
    await _syncWeatherServiceLanguage();

    notifyListeners();
  }

  // –î–û–ë–ê–í–õ–ï–ù–û: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–∞ —Å WeatherNotificationService
  Future<void> _syncWeatherServiceLanguage() async {
    try {
      await WeatherNotificationService().updateLanguage(_currentLocale.languageCode);
      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üå§Ô∏è –Ø–∑—ã–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å WeatherNotificationService: ${_currentLocale.languageCode}');
    } catch (e) {
      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —è–∑—ã–∫–∞ —Å WeatherNotificationService: $e');
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π —è–∑—ã–∫
  Future<bool> isUsingSystemLanguage() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      return prefs.getBool(_systemLanguageKey) ?? false;
    } catch (e) {
      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —è–∑—ã–∫–∞: $e');
      return false;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —è–∑—ã–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  static Future<Locale> getDeviceLocale() async {
    try {
      final deviceLocale = WidgetsBinding.instance.platformDispatcher.locale;
      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üì± –°–∏—Å—Ç–µ–º–Ω—ã–π —è–∑—ã–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: ${deviceLocale.languageCode}');

      // –û–ë–ù–û–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π —è–∑—ã–∫ (–¥–æ–±–∞–≤–ª–µ–Ω 'kk')
      if (['ru', 'en', 'kk'].contains(deviceLocale.languageCode)) {
        return Locale(deviceLocale.languageCode);
      }

      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚ö†Ô∏è –°–∏—Å—Ç–µ–º–Ω—ã–π —è–∑—ã–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä—É—Å—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
      // –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä—É—Å—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      return const Locale('ru', 'RU');
    } catch (e) {
      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —è–∑—ã–∫–∞: $e');
      return const Locale('ru', 'RU');
    }
  }

  // –û–ë–ù–û–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —è–∑—ã–∫–∞ (–¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∑–∞—Ö—Å–∫–∏–π)
  String getLanguageName(String languageCode) {
    switch (languageCode) {
      case 'ru':
        return '–†—É—Å—Å–∫–∏–π';
      case 'en':
        return 'English';
      case 'kk':                    // –î–û–ë–ê–í–õ–ï–ù–û
        return '“ö–∞–∑–∞“õ—à–∞';           // –î–û–ë–ê–í–õ–ï–ù–û
      default:
        return 'Unknown';
    }
  }

  // –û–ë–ù–û–í–õ–ï–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤ (–¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∑–∞—Ö—Å–∫–∏–π)
  List<Map<String, String>> getSupportedLanguages() {
    return [
      {
        'code': 'system',
        'name': '–°–∏—Å—Ç–µ–º–Ω—ã–π —è–∑—ã–∫',
        'nativeName': 'System Language',
      },
      {'code': 'ru', 'name': '–†—É—Å—Å–∫–∏–π', 'nativeName': 'Russian'},
      {'code': 'en', 'name': 'English', 'nativeName': '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π'},
      {'code': 'kk', 'name': '“ö–∞–∑–∞“õ—à–∞', 'nativeName': '–ö–∞–∑–∞—Ö—Å–∫–∏–π'},  // –î–û–ë–ê–í–õ–ï–ù–û
    ];
  }

  // –°–±—Ä–æ—Å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  Future<void> resetToDefault() async {
    // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üîÑ –°–±—Ä–æ—Å —è–∑—ã–∫–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');

    try {
      final prefs = await SharedPreferences.getInstance();
      await prefs.remove(_prefsKey);
      await prefs.remove(_systemLanguageKey);

      _currentLocale = const Locale('ru', 'RU');

      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚úÖ –Ø–∑—ã–∫ —Å–±—Ä–æ—à–µ–Ω –∫ —Ä—É—Å—Å–∫–æ–º—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    } catch (e) {
      // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —è–∑—ã–∫–∞: $e');
    }

    // –î–û–ë–ê–í–õ–ï–ù–û: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å WeatherNotificationService –ø—Ä–∏ —Å–±—Ä–æ—Å–µ
    await _syncWeatherServiceLanguage();

    notifyListeners();
  }

  // –î–û–ë–ê–í–õ–ï–ù–û: –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª–∏
  Future<void> refreshLanguage() async {
    // ‚úÖ –£–ë–†–ê–ù–û: debugPrint('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞');
    await _loadSavedLanguage();
  }
}